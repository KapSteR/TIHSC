// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _iosc_iosThread_HH_
#define _iosc_iosThread_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct iosc_iosThread : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<4> > ctrl;
    sc_in< sc_lv<4> > inSwitch;
    sc_out< sc_lv<4> > outLeds;
    sc_out< sc_logic > outLeds_ap_vld;
    sc_out< sc_lv<4> > iosc_switchs_V;
    sc_out< sc_logic > iosc_switchs_V_ap_vld;
    sc_out< sc_lv<4> > iosc_switchs_in_V;
    sc_out< sc_logic > iosc_switchs_in_V_ap_vld;
    sc_out< sc_lv<4> > iosc_ctrl_in_V;
    sc_out< sc_logic > iosc_ctrl_in_V_ap_vld;
    sc_in< sc_lv<4> > iosc_second_count_V_i;
    sc_out< sc_lv<4> > iosc_second_count_V_o;
    sc_out< sc_logic > iosc_second_count_V_o_ap_vld;
    sc_in< sc_logic > iosc_second;


    // Module declarations
    iosc_iosThread(sc_module_name name);
    SC_HAS_PROCESS(iosc_iosThread);

    ~iosc_iosThread();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > tmp_fu_156_p2;
    sc_signal< sc_lv<1> > tmp_reg_183;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_33;
    sc_signal< sc_lv<1> > iosc_second_read_read_fu_135_p2;
    sc_signal< sc_lv<4> > r_V_fu_162_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_170_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_58;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_st3_fsm_2;
    static const sc_lv<4> ap_ST_st4_fsm_3;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_sig_bdd_33();
    void thread_ap_sig_bdd_58();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_iosc_ctrl_in_V();
    void thread_iosc_ctrl_in_V_ap_vld();
    void thread_iosc_second_count_V_o();
    void thread_iosc_second_count_V_o_ap_vld();
    void thread_iosc_second_read_read_fu_135_p2();
    void thread_iosc_switchs_V();
    void thread_iosc_switchs_V_ap_vld();
    void thread_iosc_switchs_in_V();
    void thread_iosc_switchs_in_V_ap_vld();
    void thread_outLeds();
    void thread_outLeds_ap_vld();
    void thread_r_V_fu_162_p2();
    void thread_tmp_1_fu_170_p2();
    void thread_tmp_fu_156_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
