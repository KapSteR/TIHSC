// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="yuv_filter,hls_ip_2014_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.748500,HLS_SYN_LAT=12556765,HLS_SYN_TPT=none,HLS_SYN_MEM=7200,HLS_SYN_DSP=12,HLS_SYN_FF=706,HLS_SYN_LUT=857}" *)

module yuv_filter (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_channels_ch1_address0,
        in_channels_ch1_ce0,
        in_channels_ch1_q0,
        in_channels_ch2_address0,
        in_channels_ch2_ce0,
        in_channels_ch2_q0,
        in_channels_ch3_address0,
        in_channels_ch3_ce0,
        in_channels_ch3_q0,
        in_width,
        in_height,
        out_channels_ch1_address0,
        out_channels_ch1_ce0,
        out_channels_ch1_we0,
        out_channels_ch1_d0,
        out_channels_ch2_address0,
        out_channels_ch2_ce0,
        out_channels_ch2_we0,
        out_channels_ch2_d0,
        out_channels_ch3_address0,
        out_channels_ch3_ce0,
        out_channels_ch3_we0,
        out_channels_ch3_d0,
        out_width,
        out_width_ap_vld,
        out_height,
        out_height_ap_vld,
        Y_scale,
        U_scale,
        V_scale
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 8'b1;
parameter    ap_ST_st2_fsm_1 = 8'b10;
parameter    ap_ST_st3_fsm_2 = 8'b100;
parameter    ap_ST_st4_fsm_3 = 8'b1000;
parameter    ap_ST_st5_fsm_4 = 8'b10000;
parameter    ap_ST_st6_fsm_5 = 8'b100000;
parameter    ap_ST_st7_fsm_6 = 8'b1000000;
parameter    ap_ST_st8_fsm_7 = 8'b10000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv16_1 = 16'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [21:0] in_channels_ch1_address0;
output   in_channels_ch1_ce0;
input  [7:0] in_channels_ch1_q0;
output  [21:0] in_channels_ch2_address0;
output   in_channels_ch2_ce0;
input  [7:0] in_channels_ch2_q0;
output  [21:0] in_channels_ch3_address0;
output   in_channels_ch3_ce0;
input  [7:0] in_channels_ch3_q0;
input  [15:0] in_width;
input  [15:0] in_height;
output  [21:0] out_channels_ch1_address0;
output   out_channels_ch1_ce0;
output   out_channels_ch1_we0;
output  [7:0] out_channels_ch1_d0;
output  [21:0] out_channels_ch2_address0;
output   out_channels_ch2_ce0;
output   out_channels_ch2_we0;
output  [7:0] out_channels_ch2_d0;
output  [21:0] out_channels_ch3_address0;
output   out_channels_ch3_ce0;
output   out_channels_ch3_we0;
output  [7:0] out_channels_ch3_d0;
output  [15:0] out_width;
output   out_width_ap_vld;
output  [15:0] out_height;
output   out_height_ap_vld;
input  [7:0] Y_scale;
input  [7:0] U_scale;
input  [7:0] V_scale;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_channels_ch1_ce0;
reg in_channels_ch2_ce0;
reg in_channels_ch3_ce0;
reg out_channels_ch1_ce0;
reg out_channels_ch1_we0;
reg out_channels_ch2_ce0;
reg out_channels_ch2_we0;
reg out_channels_ch3_ce0;
reg out_channels_ch3_we0;
reg out_width_ap_vld;
reg out_height_ap_vld;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm = 8'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_24;
reg   [15:0] p_yuv_width_reg_442;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_93;
wire    grp_yuv_filter_rgb2yuv_fu_245_ap_done;
reg   [15:0] p_yuv_height_reg_448;
wire   [14:0] tmp_i_cast_fu_288_p1;
reg   [14:0] tmp_i_cast_reg_454;
wire   [14:0] tmp_i_cast_15_fu_292_p1;
reg   [14:0] tmp_i_cast_15_reg_459;
wire   [14:0] tmp_28_i_cast_fu_296_p1;
reg   [14:0] tmp_28_i_cast_reg_464;
wire   [15:0] x_fu_305_p2;
reg   [15:0] x_reg_472;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_114;
wire   [26:0] p_addr_fu_335_p2;
reg   [26:0] p_addr_reg_477;
wire   [0:0] exitcond1_i_fu_300_p2;
wire   [15:0] y_fu_346_p2;
reg   [15:0] y_reg_485;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_129;
wire   [63:0] tmp_2_fu_361_p1;
reg   [63:0] tmp_2_reg_490;
wire   [0:0] exitcond_i_fu_341_p2;
wire   [7:0] p_yuv_channels_ch1_q0;
reg   [7:0] Y_reg_512;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_149;
wire   [7:0] p_yuv_channels_ch2_q0;
reg   [7:0] U_reg_517;
wire   [7:0] p_yuv_channels_ch3_q0;
reg   [7:0] V_reg_522;
reg   [7:0] tmp_37_i_reg_527;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_162;
reg   [7:0] tmp_38_i_reg_532;
reg   [7:0] tmp_39_i_reg_537;
reg   [21:0] p_yuv_channels_ch1_address0;
reg    p_yuv_channels_ch1_ce0;
reg    p_yuv_channels_ch1_we0;
wire   [7:0] p_yuv_channels_ch1_d0;
reg   [21:0] p_yuv_channels_ch2_address0;
reg    p_yuv_channels_ch2_ce0;
reg    p_yuv_channels_ch2_we0;
wire   [7:0] p_yuv_channels_ch2_d0;
reg   [21:0] p_yuv_channels_ch3_address0;
reg    p_yuv_channels_ch3_ce0;
reg    p_yuv_channels_ch3_we0;
wire   [7:0] p_yuv_channels_ch3_d0;
reg   [21:0] p_scale_channels_ch1_address0;
reg    p_scale_channels_ch1_ce0;
reg    p_scale_channels_ch1_we0;
wire   [7:0] p_scale_channels_ch1_d0;
wire   [7:0] p_scale_channels_ch1_q0;
reg   [21:0] p_scale_channels_ch2_address0;
reg    p_scale_channels_ch2_ce0;
reg    p_scale_channels_ch2_we0;
wire   [7:0] p_scale_channels_ch2_d0;
wire   [7:0] p_scale_channels_ch2_q0;
reg   [21:0] p_scale_channels_ch3_address0;
reg    p_scale_channels_ch3_ce0;
reg    p_scale_channels_ch3_we0;
wire   [7:0] p_scale_channels_ch3_d0;
wire   [7:0] p_scale_channels_ch3_q0;
wire    grp_yuv_filter_rgb2yuv_fu_245_ap_start;
wire    grp_yuv_filter_rgb2yuv_fu_245_ap_idle;
wire    grp_yuv_filter_rgb2yuv_fu_245_ap_ready;
wire   [21:0] grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch1_address0;
wire    grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch1_ce0;
wire   [7:0] grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch1_q0;
wire   [21:0] grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch2_address0;
wire    grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch2_ce0;
wire   [7:0] grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch2_q0;
wire   [21:0] grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch3_address0;
wire    grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch3_ce0;
wire   [7:0] grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch3_q0;
wire   [15:0] grp_yuv_filter_rgb2yuv_fu_245_in_width_read;
wire   [15:0] grp_yuv_filter_rgb2yuv_fu_245_in_height_read;
wire   [21:0] grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_address0;
wire    grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_ce0;
wire    grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_we0;
wire   [7:0] grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_d0;
wire   [21:0] grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_address0;
wire    grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_ce0;
wire    grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_we0;
wire   [7:0] grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_d0;
wire   [21:0] grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_address0;
wire    grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_ce0;
wire    grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_we0;
wire   [7:0] grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_d0;
wire   [15:0] grp_yuv_filter_rgb2yuv_fu_245_ap_return_0;
wire   [15:0] grp_yuv_filter_rgb2yuv_fu_245_ap_return_1;
wire    grp_yuv_filter_yuv2rgb_fu_265_ap_start;
wire    grp_yuv_filter_yuv2rgb_fu_265_ap_done;
wire    grp_yuv_filter_yuv2rgb_fu_265_ap_idle;
wire    grp_yuv_filter_yuv2rgb_fu_265_ap_ready;
wire   [21:0] grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch1_address0;
wire    grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch1_ce0;
wire   [7:0] grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch1_q0;
wire   [21:0] grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch2_address0;
wire    grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch2_ce0;
wire   [7:0] grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch2_q0;
wire   [21:0] grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch3_address0;
wire    grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch3_ce0;
wire   [7:0] grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch3_q0;
wire   [15:0] grp_yuv_filter_yuv2rgb_fu_265_in_width_read;
wire   [15:0] grp_yuv_filter_yuv2rgb_fu_265_in_height_read;
wire   [21:0] grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_address0;
wire    grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_ce0;
wire    grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_we0;
wire   [7:0] grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_d0;
wire   [21:0] grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_address0;
wire    grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_ce0;
wire    grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_we0;
wire   [7:0] grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_d0;
wire   [21:0] grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_address0;
wire    grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_ce0;
wire    grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_we0;
wire   [7:0] grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_d0;
wire   [15:0] grp_yuv_filter_yuv2rgb_fu_265_ap_return_0;
wire   [15:0] grp_yuv_filter_yuv2rgb_fu_265_ap_return_1;
reg   [15:0] x_i_reg_222;
reg   [15:0] y_i_reg_233;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_293;
reg    grp_yuv_filter_rgb2yuv_fu_245_ap_start_ap_start_reg = 1'b0;
reg    grp_yuv_filter_yuv2rgb_fu_265_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_306;
wire   [25:0] tmp_fu_311_p3;
wire   [23:0] tmp_1_fu_323_p3;
wire   [26:0] p_shl_cast_fu_319_p1;
wire   [26:0] p_shl1_cast_fu_331_p1;
wire   [26:0] tmp_30_i_trn_cast_fu_352_p1;
wire   [26:0] p_addr1_fu_356_p2;
wire   [7:0] tmp_32_i_fu_371_p0;
wire   [7:0] tmp_32_i_fu_371_p1;
wire   [7:0] tmp_34_i_fu_379_p0;
wire   [7:0] tmp_34_i_fu_379_p1;
wire   [7:0] tmp_36_i_fu_387_p0;
wire   [7:0] tmp_36_i_fu_387_p1;
wire   [14:0] tmp_32_i_fu_371_p2;
wire   [14:0] tmp_34_i_fu_379_p2;
wire   [14:0] tmp_36_i_fu_387_p2;
reg   [7:0] ap_NS_fsm;
wire   [14:0] tmp_32_i_fu_371_p00;
wire   [14:0] tmp_34_i_fu_379_p00;
wire   [14:0] tmp_36_i_fu_387_p00;


yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_yuv_channels_ch1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( p_yuv_channels_ch1_address0 ),
    .ce0( p_yuv_channels_ch1_ce0 ),
    .we0( p_yuv_channels_ch1_we0 ),
    .d0( p_yuv_channels_ch1_d0 ),
    .q0( p_yuv_channels_ch1_q0 )
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_yuv_channels_ch2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( p_yuv_channels_ch2_address0 ),
    .ce0( p_yuv_channels_ch2_ce0 ),
    .we0( p_yuv_channels_ch2_we0 ),
    .d0( p_yuv_channels_ch2_d0 ),
    .q0( p_yuv_channels_ch2_q0 )
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_yuv_channels_ch3_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( p_yuv_channels_ch3_address0 ),
    .ce0( p_yuv_channels_ch3_ce0 ),
    .we0( p_yuv_channels_ch3_we0 ),
    .d0( p_yuv_channels_ch3_d0 ),
    .q0( p_yuv_channels_ch3_q0 )
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_scale_channels_ch1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( p_scale_channels_ch1_address0 ),
    .ce0( p_scale_channels_ch1_ce0 ),
    .we0( p_scale_channels_ch1_we0 ),
    .d0( p_scale_channels_ch1_d0 ),
    .q0( p_scale_channels_ch1_q0 )
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_scale_channels_ch2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( p_scale_channels_ch2_address0 ),
    .ce0( p_scale_channels_ch2_ce0 ),
    .we0( p_scale_channels_ch2_we0 ),
    .d0( p_scale_channels_ch2_d0 ),
    .q0( p_scale_channels_ch2_q0 )
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_scale_channels_ch3_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( p_scale_channels_ch3_address0 ),
    .ce0( p_scale_channels_ch3_ce0 ),
    .we0( p_scale_channels_ch3_we0 ),
    .d0( p_scale_channels_ch3_d0 ),
    .q0( p_scale_channels_ch3_q0 )
);

yuv_filter_rgb2yuv grp_yuv_filter_rgb2yuv_fu_245(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_yuv_filter_rgb2yuv_fu_245_ap_start ),
    .ap_done( grp_yuv_filter_rgb2yuv_fu_245_ap_done ),
    .ap_idle( grp_yuv_filter_rgb2yuv_fu_245_ap_idle ),
    .ap_ready( grp_yuv_filter_rgb2yuv_fu_245_ap_ready ),
    .in_channels_ch1_address0( grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch1_address0 ),
    .in_channels_ch1_ce0( grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch1_ce0 ),
    .in_channels_ch1_q0( grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch1_q0 ),
    .in_channels_ch2_address0( grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch2_address0 ),
    .in_channels_ch2_ce0( grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch2_ce0 ),
    .in_channels_ch2_q0( grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch2_q0 ),
    .in_channels_ch3_address0( grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch3_address0 ),
    .in_channels_ch3_ce0( grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch3_ce0 ),
    .in_channels_ch3_q0( grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch3_q0 ),
    .in_width_read( grp_yuv_filter_rgb2yuv_fu_245_in_width_read ),
    .in_height_read( grp_yuv_filter_rgb2yuv_fu_245_in_height_read ),
    .out_channels_ch1_address0( grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_address0 ),
    .out_channels_ch1_ce0( grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_ce0 ),
    .out_channels_ch1_we0( grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_we0 ),
    .out_channels_ch1_d0( grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_d0 ),
    .out_channels_ch2_address0( grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_address0 ),
    .out_channels_ch2_ce0( grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_ce0 ),
    .out_channels_ch2_we0( grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_we0 ),
    .out_channels_ch2_d0( grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_d0 ),
    .out_channels_ch3_address0( grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_address0 ),
    .out_channels_ch3_ce0( grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_ce0 ),
    .out_channels_ch3_we0( grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_we0 ),
    .out_channels_ch3_d0( grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_d0 ),
    .ap_return_0( grp_yuv_filter_rgb2yuv_fu_245_ap_return_0 ),
    .ap_return_1( grp_yuv_filter_rgb2yuv_fu_245_ap_return_1 )
);

yuv_filter_yuv2rgb grp_yuv_filter_yuv2rgb_fu_265(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_yuv_filter_yuv2rgb_fu_265_ap_start ),
    .ap_done( grp_yuv_filter_yuv2rgb_fu_265_ap_done ),
    .ap_idle( grp_yuv_filter_yuv2rgb_fu_265_ap_idle ),
    .ap_ready( grp_yuv_filter_yuv2rgb_fu_265_ap_ready ),
    .in_channels_ch1_address0( grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch1_address0 ),
    .in_channels_ch1_ce0( grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch1_ce0 ),
    .in_channels_ch1_q0( grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch1_q0 ),
    .in_channels_ch2_address0( grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch2_address0 ),
    .in_channels_ch2_ce0( grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch2_ce0 ),
    .in_channels_ch2_q0( grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch2_q0 ),
    .in_channels_ch3_address0( grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch3_address0 ),
    .in_channels_ch3_ce0( grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch3_ce0 ),
    .in_channels_ch3_q0( grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch3_q0 ),
    .in_width_read( grp_yuv_filter_yuv2rgb_fu_265_in_width_read ),
    .in_height_read( grp_yuv_filter_yuv2rgb_fu_265_in_height_read ),
    .out_channels_ch1_address0( grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_address0 ),
    .out_channels_ch1_ce0( grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_ce0 ),
    .out_channels_ch1_we0( grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_we0 ),
    .out_channels_ch1_d0( grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_d0 ),
    .out_channels_ch2_address0( grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_address0 ),
    .out_channels_ch2_ce0( grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_ce0 ),
    .out_channels_ch2_we0( grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_we0 ),
    .out_channels_ch2_d0( grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_d0 ),
    .out_channels_ch3_address0( grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_address0 ),
    .out_channels_ch3_ce0( grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_ce0 ),
    .out_channels_ch3_we0( grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_we0 ),
    .out_channels_ch3_d0( grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_d0 ),
    .ap_return_0( grp_yuv_filter_yuv2rgb_fu_265_ap_return_0 ),
    .ap_return_1( grp_yuv_filter_yuv2rgb_fu_265_ap_return_1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_yuv_filter_rgb2yuv_fu_245_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_yuv_filter_rgb2yuv_fu_245_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_yuv_filter_rgb2yuv_fu_245_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            grp_yuv_filter_rgb2yuv_fu_245_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_yuv_filter_rgb2yuv_fu_245_ap_ready)) begin
            grp_yuv_filter_rgb2yuv_fu_245_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// grp_yuv_filter_yuv2rgb_fu_265_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_yuv_filter_yuv2rgb_fu_265_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_yuv_filter_yuv2rgb_fu_265_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(exitcond1_i_fu_300_p2 == ap_const_lv1_0))) begin
            grp_yuv_filter_yuv2rgb_fu_265_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_yuv_filter_yuv2rgb_fu_265_ap_ready)) begin
            grp_yuv_filter_yuv2rgb_fu_265_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(ap_const_lv1_0 == exitcond_i_fu_341_p2))) begin
        x_i_reg_222 <= x_reg_472;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_logic_0 == grp_yuv_filter_rgb2yuv_fu_245_ap_done))) begin
        x_i_reg_222 <= ap_const_lv16_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        y_i_reg_233 <= y_reg_485;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond1_i_fu_300_p2 == ap_const_lv1_0))) begin
        y_i_reg_233 <= ap_const_lv16_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        U_reg_517 <= p_yuv_channels_ch2_q0;
        V_reg_522 <= p_yuv_channels_ch3_q0;
        Y_reg_512 <= p_yuv_channels_ch1_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond1_i_fu_300_p2 == ap_const_lv1_0))) begin
        p_addr_reg_477[8] <= p_addr_fu_335_p2[8];
p_addr_reg_477[9] <= p_addr_fu_335_p2[9];
p_addr_reg_477[10] <= p_addr_fu_335_p2[10];
p_addr_reg_477[11] <= p_addr_fu_335_p2[11];
p_addr_reg_477[12] <= p_addr_fu_335_p2[12];
p_addr_reg_477[13] <= p_addr_fu_335_p2[13];
p_addr_reg_477[14] <= p_addr_fu_335_p2[14];
p_addr_reg_477[15] <= p_addr_fu_335_p2[15];
p_addr_reg_477[16] <= p_addr_fu_335_p2[16];
p_addr_reg_477[17] <= p_addr_fu_335_p2[17];
p_addr_reg_477[18] <= p_addr_fu_335_p2[18];
p_addr_reg_477[19] <= p_addr_fu_335_p2[19];
p_addr_reg_477[20] <= p_addr_fu_335_p2[20];
p_addr_reg_477[21] <= p_addr_fu_335_p2[21];
p_addr_reg_477[22] <= p_addr_fu_335_p2[22];
p_addr_reg_477[23] <= p_addr_fu_335_p2[23];
p_addr_reg_477[24] <= p_addr_fu_335_p2[24];
p_addr_reg_477[25] <= p_addr_fu_335_p2[25];
p_addr_reg_477[26] <= p_addr_fu_335_p2[26];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_logic_0 == grp_yuv_filter_rgb2yuv_fu_245_ap_done))) begin
        p_yuv_height_reg_448 <= grp_yuv_filter_rgb2yuv_fu_245_ap_return_1;
        p_yuv_width_reg_442 <= grp_yuv_filter_rgb2yuv_fu_245_ap_return_0;
        tmp_28_i_cast_reg_464[0] <= tmp_28_i_cast_fu_296_p1[0];
tmp_28_i_cast_reg_464[1] <= tmp_28_i_cast_fu_296_p1[1];
tmp_28_i_cast_reg_464[2] <= tmp_28_i_cast_fu_296_p1[2];
tmp_28_i_cast_reg_464[3] <= tmp_28_i_cast_fu_296_p1[3];
tmp_28_i_cast_reg_464[4] <= tmp_28_i_cast_fu_296_p1[4];
tmp_28_i_cast_reg_464[5] <= tmp_28_i_cast_fu_296_p1[5];
tmp_28_i_cast_reg_464[6] <= tmp_28_i_cast_fu_296_p1[6];
tmp_28_i_cast_reg_464[7] <= tmp_28_i_cast_fu_296_p1[7];
        tmp_i_cast_15_reg_459[0] <= tmp_i_cast_15_fu_292_p1[0];
tmp_i_cast_15_reg_459[1] <= tmp_i_cast_15_fu_292_p1[1];
tmp_i_cast_15_reg_459[2] <= tmp_i_cast_15_fu_292_p1[2];
tmp_i_cast_15_reg_459[3] <= tmp_i_cast_15_fu_292_p1[3];
tmp_i_cast_15_reg_459[4] <= tmp_i_cast_15_fu_292_p1[4];
tmp_i_cast_15_reg_459[5] <= tmp_i_cast_15_fu_292_p1[5];
tmp_i_cast_15_reg_459[6] <= tmp_i_cast_15_fu_292_p1[6];
tmp_i_cast_15_reg_459[7] <= tmp_i_cast_15_fu_292_p1[7];
        tmp_i_cast_reg_454[0] <= tmp_i_cast_fu_288_p1[0];
tmp_i_cast_reg_454[1] <= tmp_i_cast_fu_288_p1[1];
tmp_i_cast_reg_454[2] <= tmp_i_cast_fu_288_p1[2];
tmp_i_cast_reg_454[3] <= tmp_i_cast_fu_288_p1[3];
tmp_i_cast_reg_454[4] <= tmp_i_cast_fu_288_p1[4];
tmp_i_cast_reg_454[5] <= tmp_i_cast_fu_288_p1[5];
tmp_i_cast_reg_454[6] <= tmp_i_cast_fu_288_p1[6];
tmp_i_cast_reg_454[7] <= tmp_i_cast_fu_288_p1[7];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (ap_const_lv1_0 == exitcond_i_fu_341_p2))) begin
        tmp_2_reg_490[0] <= tmp_2_fu_361_p1[0];
tmp_2_reg_490[1] <= tmp_2_fu_361_p1[1];
tmp_2_reg_490[2] <= tmp_2_fu_361_p1[2];
tmp_2_reg_490[3] <= tmp_2_fu_361_p1[3];
tmp_2_reg_490[4] <= tmp_2_fu_361_p1[4];
tmp_2_reg_490[5] <= tmp_2_fu_361_p1[5];
tmp_2_reg_490[6] <= tmp_2_fu_361_p1[6];
tmp_2_reg_490[7] <= tmp_2_fu_361_p1[7];
tmp_2_reg_490[8] <= tmp_2_fu_361_p1[8];
tmp_2_reg_490[9] <= tmp_2_fu_361_p1[9];
tmp_2_reg_490[10] <= tmp_2_fu_361_p1[10];
tmp_2_reg_490[11] <= tmp_2_fu_361_p1[11];
tmp_2_reg_490[12] <= tmp_2_fu_361_p1[12];
tmp_2_reg_490[13] <= tmp_2_fu_361_p1[13];
tmp_2_reg_490[14] <= tmp_2_fu_361_p1[14];
tmp_2_reg_490[15] <= tmp_2_fu_361_p1[15];
tmp_2_reg_490[16] <= tmp_2_fu_361_p1[16];
tmp_2_reg_490[17] <= tmp_2_fu_361_p1[17];
tmp_2_reg_490[18] <= tmp_2_fu_361_p1[18];
tmp_2_reg_490[19] <= tmp_2_fu_361_p1[19];
tmp_2_reg_490[20] <= tmp_2_fu_361_p1[20];
tmp_2_reg_490[21] <= tmp_2_fu_361_p1[21];
tmp_2_reg_490[22] <= tmp_2_fu_361_p1[22];
tmp_2_reg_490[23] <= tmp_2_fu_361_p1[23];
tmp_2_reg_490[24] <= tmp_2_fu_361_p1[24];
tmp_2_reg_490[25] <= tmp_2_fu_361_p1[25];
tmp_2_reg_490[26] <= tmp_2_fu_361_p1[26];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        tmp_37_i_reg_527 <= {{tmp_32_i_fu_371_p2[ap_const_lv32_E : ap_const_lv32_7]}};
        tmp_38_i_reg_532 <= {{tmp_34_i_fu_379_p2[ap_const_lv32_E : ap_const_lv32_7]}};
        tmp_39_i_reg_537 <= {{tmp_36_i_fu_387_p2[ap_const_lv32_E : ap_const_lv32_7]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        x_reg_472 <= x_fu_305_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        y_reg_485 <= y_fu_346_p2;
    end
end

/// ap_done assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_ap_done or ap_sig_cseq_ST_st8_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_logic_0 == grp_yuv_filter_yuv2rgb_fu_265_ap_done))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_ap_done or ap_sig_cseq_ST_st8_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_logic_0 == grp_yuv_filter_yuv2rgb_fu_265_ap_done))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_24)
begin
    if (ap_sig_bdd_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_93)
begin
    if (ap_sig_bdd_93) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_114)
begin
    if (ap_sig_bdd_114) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_129)
begin
    if (ap_sig_bdd_129) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_149)
begin
    if (ap_sig_bdd_149) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_162)
begin
    if (ap_sig_bdd_162) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_293)
begin
    if (ap_sig_bdd_293) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_306)
begin
    if (ap_sig_bdd_306) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// in_channels_ch1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch1_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        in_channels_ch1_ce0 = grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch1_ce0;
    end else begin
        in_channels_ch1_ce0 = ap_const_logic_0;
    end
end

/// in_channels_ch2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch2_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        in_channels_ch2_ce0 = grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch2_ce0;
    end else begin
        in_channels_ch2_ce0 = ap_const_logic_0;
    end
end

/// in_channels_ch3_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch3_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        in_channels_ch3_ce0 = grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch3_ce0;
    end else begin
        in_channels_ch3_ce0 = ap_const_logic_0;
    end
end

/// out_channels_ch1_ce0 assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_ce0 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        out_channels_ch1_ce0 = grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_ce0;
    end else begin
        out_channels_ch1_ce0 = ap_const_logic_0;
    end
end

/// out_channels_ch1_we0 assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_we0 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        out_channels_ch1_we0 = grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_we0;
    end else begin
        out_channels_ch1_we0 = ap_const_logic_0;
    end
end

/// out_channels_ch2_ce0 assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_ce0 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        out_channels_ch2_ce0 = grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_ce0;
    end else begin
        out_channels_ch2_ce0 = ap_const_logic_0;
    end
end

/// out_channels_ch2_we0 assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_we0 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        out_channels_ch2_we0 = grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_we0;
    end else begin
        out_channels_ch2_we0 = ap_const_logic_0;
    end
end

/// out_channels_ch3_ce0 assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_ce0 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        out_channels_ch3_ce0 = grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_ce0;
    end else begin
        out_channels_ch3_ce0 = ap_const_logic_0;
    end
end

/// out_channels_ch3_we0 assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_we0 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        out_channels_ch3_we0 = grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_we0;
    end else begin
        out_channels_ch3_we0 = ap_const_logic_0;
    end
end

/// out_height_ap_vld assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_ap_done or ap_sig_cseq_ST_st8_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_logic_0 == grp_yuv_filter_yuv2rgb_fu_265_ap_done))) begin
        out_height_ap_vld = ap_const_logic_1;
    end else begin
        out_height_ap_vld = ap_const_logic_0;
    end
end

/// out_width_ap_vld assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_ap_done or ap_sig_cseq_ST_st8_fsm_7)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(ap_const_logic_0 == grp_yuv_filter_yuv2rgb_fu_265_ap_done))) begin
        out_width_ap_vld = ap_const_logic_1;
    end else begin
        out_width_ap_vld = ap_const_logic_0;
    end
end

/// p_scale_channels_ch1_address0 assign process. ///
always @ (tmp_2_reg_490 or grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch1_address0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        p_scale_channels_ch1_address0 = tmp_2_reg_490;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        p_scale_channels_ch1_address0 = grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch1_address0;
    end else begin
        p_scale_channels_ch1_address0 = 'bx;
    end
end

/// p_scale_channels_ch1_ce0 assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch1_ce0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        p_scale_channels_ch1_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        p_scale_channels_ch1_ce0 = grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch1_ce0;
    end else begin
        p_scale_channels_ch1_ce0 = ap_const_logic_0;
    end
end

/// p_scale_channels_ch1_we0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        p_scale_channels_ch1_we0 = ap_const_logic_1;
    end else begin
        p_scale_channels_ch1_we0 = ap_const_logic_0;
    end
end

/// p_scale_channels_ch2_address0 assign process. ///
always @ (tmp_2_reg_490 or grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch2_address0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        p_scale_channels_ch2_address0 = tmp_2_reg_490;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        p_scale_channels_ch2_address0 = grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch2_address0;
    end else begin
        p_scale_channels_ch2_address0 = 'bx;
    end
end

/// p_scale_channels_ch2_ce0 assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch2_ce0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        p_scale_channels_ch2_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        p_scale_channels_ch2_ce0 = grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch2_ce0;
    end else begin
        p_scale_channels_ch2_ce0 = ap_const_logic_0;
    end
end

/// p_scale_channels_ch2_we0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        p_scale_channels_ch2_we0 = ap_const_logic_1;
    end else begin
        p_scale_channels_ch2_we0 = ap_const_logic_0;
    end
end

/// p_scale_channels_ch3_address0 assign process. ///
always @ (tmp_2_reg_490 or grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch3_address0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        p_scale_channels_ch3_address0 = tmp_2_reg_490;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        p_scale_channels_ch3_address0 = grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch3_address0;
    end else begin
        p_scale_channels_ch3_address0 = 'bx;
    end
end

/// p_scale_channels_ch3_ce0 assign process. ///
always @ (grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch3_ce0 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        p_scale_channels_ch3_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        p_scale_channels_ch3_ce0 = grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch3_ce0;
    end else begin
        p_scale_channels_ch3_ce0 = ap_const_logic_0;
    end
end

/// p_scale_channels_ch3_we0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        p_scale_channels_ch3_we0 = ap_const_logic_1;
    end else begin
        p_scale_channels_ch3_we0 = ap_const_logic_0;
    end
end

/// p_yuv_channels_ch1_address0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or tmp_2_fu_361_p1 or grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_address0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        p_yuv_channels_ch1_address0 = tmp_2_fu_361_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_yuv_channels_ch1_address0 = grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_address0;
    end else begin
        p_yuv_channels_ch1_address0 = 'bx;
    end
end

/// p_yuv_channels_ch1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        p_yuv_channels_ch1_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_yuv_channels_ch1_ce0 = grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_ce0;
    end else begin
        p_yuv_channels_ch1_ce0 = ap_const_logic_0;
    end
end

/// p_yuv_channels_ch1_we0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_we0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_yuv_channels_ch1_we0 = grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_we0;
    end else begin
        p_yuv_channels_ch1_we0 = ap_const_logic_0;
    end
end

/// p_yuv_channels_ch2_address0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or tmp_2_fu_361_p1 or grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_address0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        p_yuv_channels_ch2_address0 = tmp_2_fu_361_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_yuv_channels_ch2_address0 = grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_address0;
    end else begin
        p_yuv_channels_ch2_address0 = 'bx;
    end
end

/// p_yuv_channels_ch2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        p_yuv_channels_ch2_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_yuv_channels_ch2_ce0 = grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_ce0;
    end else begin
        p_yuv_channels_ch2_ce0 = ap_const_logic_0;
    end
end

/// p_yuv_channels_ch2_we0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_we0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_yuv_channels_ch2_we0 = grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_we0;
    end else begin
        p_yuv_channels_ch2_we0 = ap_const_logic_0;
    end
end

/// p_yuv_channels_ch3_address0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or tmp_2_fu_361_p1 or grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_address0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        p_yuv_channels_ch3_address0 = tmp_2_fu_361_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_yuv_channels_ch3_address0 = grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_address0;
    end else begin
        p_yuv_channels_ch3_address0 = 'bx;
    end
end

/// p_yuv_channels_ch3_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_ce0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        p_yuv_channels_ch3_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_yuv_channels_ch3_ce0 = grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_ce0;
    end else begin
        p_yuv_channels_ch3_ce0 = ap_const_logic_0;
    end
end

/// p_yuv_channels_ch3_we0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_we0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        p_yuv_channels_ch3_we0 = grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_we0;
    end else begin
        p_yuv_channels_ch3_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or grp_yuv_filter_rgb2yuv_fu_245_ap_done or exitcond1_i_fu_300_p2 or exitcond_i_fu_341_p2 or grp_yuv_filter_yuv2rgb_fu_265_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_logic_0 == grp_yuv_filter_rgb2yuv_fu_245_ap_done)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((exitcond1_i_fu_300_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_i_fu_341_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st8_fsm_7 : 
        begin
            if (~(ap_const_logic_0 == grp_yuv_filter_yuv2rgb_fu_265_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_114 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_114 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_129 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_129 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_149 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_149 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_162 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_162 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_24 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_24 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_293 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_293 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_306 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_306 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_93 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_93 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end
assign exitcond1_i_fu_300_p2 = (x_i_reg_222 == p_yuv_width_reg_442? 1'b1: 1'b0);
assign exitcond_i_fu_341_p2 = (y_i_reg_233 == p_yuv_height_reg_448? 1'b1: 1'b0);
assign grp_yuv_filter_rgb2yuv_fu_245_ap_start = grp_yuv_filter_rgb2yuv_fu_245_ap_start_ap_start_reg;
assign grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch1_q0 = in_channels_ch1_q0;
assign grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch2_q0 = in_channels_ch2_q0;
assign grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch3_q0 = in_channels_ch3_q0;
assign grp_yuv_filter_rgb2yuv_fu_245_in_height_read = in_height;
assign grp_yuv_filter_rgb2yuv_fu_245_in_width_read = in_width;
assign grp_yuv_filter_yuv2rgb_fu_265_ap_start = grp_yuv_filter_yuv2rgb_fu_265_ap_start_ap_start_reg;
assign grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch1_q0 = p_scale_channels_ch1_q0;
assign grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch2_q0 = p_scale_channels_ch2_q0;
assign grp_yuv_filter_yuv2rgb_fu_265_in_channels_ch3_q0 = p_scale_channels_ch3_q0;
assign grp_yuv_filter_yuv2rgb_fu_265_in_height_read = p_yuv_height_reg_448;
assign grp_yuv_filter_yuv2rgb_fu_265_in_width_read = p_yuv_width_reg_442;
assign in_channels_ch1_address0 = grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch1_address0;
assign in_channels_ch2_address0 = grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch2_address0;
assign in_channels_ch3_address0 = grp_yuv_filter_rgb2yuv_fu_245_in_channels_ch3_address0;
assign out_channels_ch1_address0 = grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_address0;
assign out_channels_ch1_d0 = grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch1_d0;
assign out_channels_ch2_address0 = grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_address0;
assign out_channels_ch2_d0 = grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch2_d0;
assign out_channels_ch3_address0 = grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_address0;
assign out_channels_ch3_d0 = grp_yuv_filter_yuv2rgb_fu_265_out_channels_ch3_d0;
assign out_height = grp_yuv_filter_yuv2rgb_fu_265_ap_return_1;
assign out_width = grp_yuv_filter_yuv2rgb_fu_265_ap_return_0;
assign p_addr1_fu_356_p2 = (p_addr_reg_477 + tmp_30_i_trn_cast_fu_352_p1);
assign p_addr_fu_335_p2 = (p_shl_cast_fu_319_p1 + p_shl1_cast_fu_331_p1);
assign p_scale_channels_ch1_d0 = tmp_37_i_reg_527;
assign p_scale_channels_ch2_d0 = tmp_38_i_reg_532;
assign p_scale_channels_ch3_d0 = tmp_39_i_reg_537;
assign p_shl1_cast_fu_331_p1 = tmp_1_fu_323_p3;
assign p_shl_cast_fu_319_p1 = tmp_fu_311_p3;
assign p_yuv_channels_ch1_d0 = grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch1_d0;
assign p_yuv_channels_ch2_d0 = grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch2_d0;
assign p_yuv_channels_ch3_d0 = grp_yuv_filter_rgb2yuv_fu_245_out_channels_ch3_d0;
assign tmp_1_fu_323_p3 = {{x_i_reg_222}, {ap_const_lv8_0}};
assign tmp_28_i_cast_fu_296_p1 = V_scale;
assign tmp_2_fu_361_p1 = p_addr1_fu_356_p2;
assign tmp_30_i_trn_cast_fu_352_p1 = y_i_reg_233;
assign tmp_32_i_fu_371_p0 = tmp_32_i_fu_371_p00;
assign tmp_32_i_fu_371_p00 = Y_reg_512;
assign tmp_32_i_fu_371_p1 = tmp_i_cast_reg_454;
assign tmp_32_i_fu_371_p2 = (tmp_32_i_fu_371_p0 * tmp_32_i_fu_371_p1);
assign tmp_34_i_fu_379_p0 = tmp_34_i_fu_379_p00;
assign tmp_34_i_fu_379_p00 = U_reg_517;
assign tmp_34_i_fu_379_p1 = tmp_i_cast_15_reg_459;
assign tmp_34_i_fu_379_p2 = (tmp_34_i_fu_379_p0 * tmp_34_i_fu_379_p1);
assign tmp_36_i_fu_387_p0 = tmp_36_i_fu_387_p00;
assign tmp_36_i_fu_387_p00 = V_reg_522;
assign tmp_36_i_fu_387_p1 = tmp_28_i_cast_reg_464;
assign tmp_36_i_fu_387_p2 = (tmp_36_i_fu_387_p0 * tmp_36_i_fu_387_p1);
assign tmp_fu_311_p3 = {{x_i_reg_222}, {ap_const_lv10_0}};
assign tmp_i_cast_15_fu_292_p1 = U_scale;
assign tmp_i_cast_fu_288_p1 = Y_scale;
assign x_fu_305_p2 = (x_i_reg_222 + ap_const_lv16_1);
assign y_fu_346_p2 = (y_i_reg_233 + ap_const_lv16_1);
always @ (posedge ap_clk)
begin
    tmp_i_cast_reg_454[14:8] <= 7'b0000000;
    tmp_i_cast_15_reg_459[14:8] <= 7'b0000000;
    tmp_28_i_cast_reg_464[14:8] <= 7'b0000000;
    p_addr_reg_477[7:0] <= 8'b00000000;
    tmp_2_reg_490[63:27] <= 37'b0000000000000000000000000000000000000;
end



endmodule //yuv_filter

