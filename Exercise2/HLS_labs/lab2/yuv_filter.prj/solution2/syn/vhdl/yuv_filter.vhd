-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity yuv_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch1_ce0 : OUT STD_LOGIC;
    in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch2_ce0 : OUT STD_LOGIC;
    in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch3_ce0 : OUT STD_LOGIC;
    in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_width : IN STD_LOGIC_VECTOR (15 downto 0);
    in_height : IN STD_LOGIC_VECTOR (15 downto 0);
    out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch1_ce0 : OUT STD_LOGIC;
    out_channels_ch1_we0 : OUT STD_LOGIC;
    out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch2_ce0 : OUT STD_LOGIC;
    out_channels_ch2_we0 : OUT STD_LOGIC;
    out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch3_ce0 : OUT STD_LOGIC;
    out_channels_ch3_we0 : OUT STD_LOGIC;
    out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_width : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_width_ap_vld : OUT STD_LOGIC;
    out_height : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_height_ap_vld : OUT STD_LOGIC;
    Y_scale : IN STD_LOGIC_VECTOR (7 downto 0);
    U_scale : IN STD_LOGIC_VECTOR (7 downto 0);
    V_scale : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of yuv_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "yuv_filter,hls_ip_2014_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.748500,HLS_SYN_LAT=2353224,HLS_SYN_TPT=none,HLS_SYN_MEM=7200,HLS_SYN_DSP=15,HLS_SYN_FF=919,HLS_SYN_LUT=1305}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_22 : BOOLEAN;
    signal p_yuv_width_reg_204 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_91 : BOOLEAN;
    signal grp_yuv_filter_rgb2yuv_fu_115_ap_done : STD_LOGIC;
    signal p_yuv_height_reg_209 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_106 : BOOLEAN;
    signal p_scale_width_reg_229 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_119 : BOOLEAN;
    signal grp_yuv_filter_yuv_scale_fu_150_ap_done : STD_LOGIC;
    signal p_scale_height_reg_234 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_yuv_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch1_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch1_we0 : STD_LOGIC;
    signal p_yuv_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch2_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch2_we0 : STD_LOGIC;
    signal p_yuv_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch3_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch3_we0 : STD_LOGIC;
    signal p_yuv_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch1_ce0 : STD_LOGIC;
    signal p_scale_channels_ch1_we0 : STD_LOGIC;
    signal p_scale_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch2_ce0 : STD_LOGIC;
    signal p_scale_channels_ch2_we0 : STD_LOGIC;
    signal p_scale_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch3_ce0 : STD_LOGIC;
    signal p_scale_channels_ch3_we0 : STD_LOGIC;
    signal p_scale_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_ap_start : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_115_ap_idle : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_115_ap_ready : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_in_width_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_in_height_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_ap_start : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_ap_done : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_ap_idle : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_ap_ready : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_in_width_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_in_height_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_yuv2rgb_fu_135_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_ap_start : STD_LOGIC;
    signal grp_yuv_filter_yuv_scale_fu_150_ap_idle : STD_LOGIC;
    signal grp_yuv_filter_yuv_scale_fu_150_ap_ready : STD_LOGIC;
    signal grp_yuv_filter_yuv_scale_fu_150_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv_scale_fu_150_in_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv_scale_fu_150_in_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv_scale_fu_150_in_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_in_width_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_in_height_read : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_Y_scale : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_U_scale : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_V_scale : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_yuv_scale_fu_150_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_filter_rgb2yuv_fu_115_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_yuv_filter_yuv2rgb_fu_135_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_285 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_292 : BOOLEAN;
    signal grp_yuv_filter_yuv_scale_fu_150_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component yuv_filter_rgb2yuv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_width_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_height_read : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_yuv2rgb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_width_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_height_read : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_yuv_scale IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_width_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_height_read : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        Y_scale : IN STD_LOGIC_VECTOR (7 downto 0);
        U_scale : IN STD_LOGIC_VECTOR (7 downto 0);
        V_scale : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_p_yuv_channels_ch1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    p_yuv_channels_ch1_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch1_address0,
        ce0 => p_yuv_channels_ch1_ce0,
        we0 => p_yuv_channels_ch1_we0,
        d0 => p_yuv_channels_ch1_d0,
        q0 => p_yuv_channels_ch1_q0);

    p_yuv_channels_ch2_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch2_address0,
        ce0 => p_yuv_channels_ch2_ce0,
        we0 => p_yuv_channels_ch2_we0,
        d0 => p_yuv_channels_ch2_d0,
        q0 => p_yuv_channels_ch2_q0);

    p_yuv_channels_ch3_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch3_address0,
        ce0 => p_yuv_channels_ch3_ce0,
        we0 => p_yuv_channels_ch3_we0,
        d0 => p_yuv_channels_ch3_d0,
        q0 => p_yuv_channels_ch3_q0);

    p_scale_channels_ch1_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch1_address0,
        ce0 => p_scale_channels_ch1_ce0,
        we0 => p_scale_channels_ch1_we0,
        d0 => p_scale_channels_ch1_d0,
        q0 => p_scale_channels_ch1_q0);

    p_scale_channels_ch2_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch2_address0,
        ce0 => p_scale_channels_ch2_ce0,
        we0 => p_scale_channels_ch2_we0,
        d0 => p_scale_channels_ch2_d0,
        q0 => p_scale_channels_ch2_q0);

    p_scale_channels_ch3_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch3_address0,
        ce0 => p_scale_channels_ch3_ce0,
        we0 => p_scale_channels_ch3_we0,
        d0 => p_scale_channels_ch3_d0,
        q0 => p_scale_channels_ch3_q0);

    grp_yuv_filter_rgb2yuv_fu_115 : component yuv_filter_rgb2yuv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_yuv_filter_rgb2yuv_fu_115_ap_start,
        ap_done => grp_yuv_filter_rgb2yuv_fu_115_ap_done,
        ap_idle => grp_yuv_filter_rgb2yuv_fu_115_ap_idle,
        ap_ready => grp_yuv_filter_rgb2yuv_fu_115_ap_ready,
        in_channels_ch1_address0 => grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch1_ce0,
        in_channels_ch1_q0 => grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch1_q0,
        in_channels_ch2_address0 => grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch2_ce0,
        in_channels_ch2_q0 => grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch2_q0,
        in_channels_ch3_address0 => grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch3_ce0,
        in_channels_ch3_q0 => grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch3_q0,
        in_width_read => grp_yuv_filter_rgb2yuv_fu_115_in_width_read,
        in_height_read => grp_yuv_filter_rgb2yuv_fu_115_in_height_read,
        out_channels_ch1_address0 => grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_d0,
        ap_return_0 => grp_yuv_filter_rgb2yuv_fu_115_ap_return_0,
        ap_return_1 => grp_yuv_filter_rgb2yuv_fu_115_ap_return_1);

    grp_yuv_filter_yuv2rgb_fu_135 : component yuv_filter_yuv2rgb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_yuv_filter_yuv2rgb_fu_135_ap_start,
        ap_done => grp_yuv_filter_yuv2rgb_fu_135_ap_done,
        ap_idle => grp_yuv_filter_yuv2rgb_fu_135_ap_idle,
        ap_ready => grp_yuv_filter_yuv2rgb_fu_135_ap_ready,
        in_channels_ch1_address0 => grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch1_ce0,
        in_channels_ch1_q0 => grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch1_q0,
        in_channels_ch2_address0 => grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch2_ce0,
        in_channels_ch2_q0 => grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch2_q0,
        in_channels_ch3_address0 => grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch3_ce0,
        in_channels_ch3_q0 => grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch3_q0,
        in_width_read => grp_yuv_filter_yuv2rgb_fu_135_in_width_read,
        in_height_read => grp_yuv_filter_yuv2rgb_fu_135_in_height_read,
        out_channels_ch1_address0 => grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_d0,
        ap_return_0 => grp_yuv_filter_yuv2rgb_fu_135_ap_return_0,
        ap_return_1 => grp_yuv_filter_yuv2rgb_fu_135_ap_return_1);

    grp_yuv_filter_yuv_scale_fu_150 : component yuv_filter_yuv_scale
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_yuv_filter_yuv_scale_fu_150_ap_start,
        ap_done => grp_yuv_filter_yuv_scale_fu_150_ap_done,
        ap_idle => grp_yuv_filter_yuv_scale_fu_150_ap_idle,
        ap_ready => grp_yuv_filter_yuv_scale_fu_150_ap_ready,
        in_channels_ch1_address0 => grp_yuv_filter_yuv_scale_fu_150_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_yuv_filter_yuv_scale_fu_150_in_channels_ch1_ce0,
        in_channels_ch1_q0 => grp_yuv_filter_yuv_scale_fu_150_in_channels_ch1_q0,
        in_channels_ch2_address0 => grp_yuv_filter_yuv_scale_fu_150_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_yuv_filter_yuv_scale_fu_150_in_channels_ch2_ce0,
        in_channels_ch2_q0 => grp_yuv_filter_yuv_scale_fu_150_in_channels_ch2_q0,
        in_channels_ch3_address0 => grp_yuv_filter_yuv_scale_fu_150_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_yuv_filter_yuv_scale_fu_150_in_channels_ch3_ce0,
        in_channels_ch3_q0 => grp_yuv_filter_yuv_scale_fu_150_in_channels_ch3_q0,
        in_width_read => grp_yuv_filter_yuv_scale_fu_150_in_width_read,
        in_height_read => grp_yuv_filter_yuv_scale_fu_150_in_height_read,
        out_channels_ch1_address0 => grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_d0,
        Y_scale => grp_yuv_filter_yuv_scale_fu_150_Y_scale,
        U_scale => grp_yuv_filter_yuv_scale_fu_150_U_scale,
        V_scale => grp_yuv_filter_yuv_scale_fu_150_V_scale,
        ap_return_0 => grp_yuv_filter_yuv_scale_fu_150_ap_return_0,
        ap_return_1 => grp_yuv_filter_yuv_scale_fu_150_ap_return_1);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- grp_yuv_filter_rgb2yuv_fu_115_ap_start_ap_start_reg assign process. --
    grp_yuv_filter_rgb2yuv_fu_115_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_yuv_filter_rgb2yuv_fu_115_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    grp_yuv_filter_rgb2yuv_fu_115_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_yuv_filter_rgb2yuv_fu_115_ap_ready)) then 
                    grp_yuv_filter_rgb2yuv_fu_115_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_yuv_filter_yuv2rgb_fu_135_ap_start_ap_start_reg assign process. --
    grp_yuv_filter_yuv2rgb_fu_135_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_yuv_filter_yuv2rgb_fu_135_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    grp_yuv_filter_yuv2rgb_fu_135_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_yuv_filter_yuv2rgb_fu_135_ap_ready)) then 
                    grp_yuv_filter_yuv2rgb_fu_135_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_yuv_filter_yuv_scale_fu_150_ap_start_ap_start_reg assign process. --
    grp_yuv_filter_yuv_scale_fu_150_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_yuv_filter_yuv_scale_fu_150_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                    grp_yuv_filter_yuv_scale_fu_150_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_yuv_filter_yuv_scale_fu_150_ap_ready)) then 
                    grp_yuv_filter_yuv_scale_fu_150_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_logic_0 = grp_yuv_filter_yuv_scale_fu_150_ap_done)))) then
                p_scale_height_reg_234 <= grp_yuv_filter_yuv_scale_fu_150_ap_return_1;
                p_scale_width_reg_229 <= grp_yuv_filter_yuv_scale_fu_150_ap_return_0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_yuv_filter_rgb2yuv_fu_115_ap_done)))) then
                p_yuv_height_reg_209 <= grp_yuv_filter_rgb2yuv_fu_115_ap_return_1;
                p_yuv_width_reg_204 <= grp_yuv_filter_rgb2yuv_fu_115_ap_return_0;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_yuv_filter_rgb2yuv_fu_115_ap_done, grp_yuv_filter_yuv_scale_fu_150_ap_done, grp_yuv_filter_yuv2rgb_fu_135_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_logic_0 = grp_yuv_filter_rgb2yuv_fu_115_ap_done))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_logic_0 = grp_yuv_filter_yuv_scale_fu_150_ap_done))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_135_ap_done))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_135_ap_done, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_135_ap_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_135_ap_done, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_135_ap_done)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_106 assign process. --
    ap_sig_bdd_106_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_106 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_119 assign process. --
    ap_sig_bdd_119_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_119 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_22 assign process. --
    ap_sig_bdd_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_285 assign process. --
    ap_sig_bdd_285_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_285 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_292 assign process. --
    ap_sig_bdd_292_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_292 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_91 assign process. --
    ap_sig_bdd_91_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_91 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_22)
    begin
        if (ap_sig_bdd_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_91)
    begin
        if (ap_sig_bdd_91) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_106)
    begin
        if (ap_sig_bdd_106) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_119)
    begin
        if (ap_sig_bdd_119) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_285)
    begin
        if (ap_sig_bdd_285) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_292)
    begin
        if (ap_sig_bdd_292) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;

    grp_yuv_filter_rgb2yuv_fu_115_ap_start <= grp_yuv_filter_rgb2yuv_fu_115_ap_start_ap_start_reg;
    grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch1_q0 <= in_channels_ch1_q0;
    grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch2_q0 <= in_channels_ch2_q0;
    grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch3_q0 <= in_channels_ch3_q0;
    grp_yuv_filter_rgb2yuv_fu_115_in_height_read <= in_height;
    grp_yuv_filter_rgb2yuv_fu_115_in_width_read <= in_width;
    grp_yuv_filter_yuv2rgb_fu_135_ap_start <= grp_yuv_filter_yuv2rgb_fu_135_ap_start_ap_start_reg;
    grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch1_q0 <= p_scale_channels_ch1_q0;
    grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch2_q0 <= p_scale_channels_ch2_q0;
    grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch3_q0 <= p_scale_channels_ch3_q0;
    grp_yuv_filter_yuv2rgb_fu_135_in_height_read <= p_scale_height_reg_234;
    grp_yuv_filter_yuv2rgb_fu_135_in_width_read <= p_scale_width_reg_229;
    grp_yuv_filter_yuv_scale_fu_150_U_scale <= U_scale;
    grp_yuv_filter_yuv_scale_fu_150_V_scale <= V_scale;
    grp_yuv_filter_yuv_scale_fu_150_Y_scale <= Y_scale;
    grp_yuv_filter_yuv_scale_fu_150_ap_start <= grp_yuv_filter_yuv_scale_fu_150_ap_start_ap_start_reg;
    grp_yuv_filter_yuv_scale_fu_150_in_channels_ch1_q0 <= p_yuv_channels_ch1_q0;
    grp_yuv_filter_yuv_scale_fu_150_in_channels_ch2_q0 <= p_yuv_channels_ch2_q0;
    grp_yuv_filter_yuv_scale_fu_150_in_channels_ch3_q0 <= p_yuv_channels_ch3_q0;
    grp_yuv_filter_yuv_scale_fu_150_in_height_read <= p_yuv_height_reg_209;
    grp_yuv_filter_yuv_scale_fu_150_in_width_read <= p_yuv_width_reg_204;
    in_channels_ch1_address0 <= grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch1_address0;

    -- in_channels_ch1_ce0 assign process. --
    in_channels_ch1_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch1_ce0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            in_channels_ch1_ce0 <= grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch1_ce0;
        else 
            in_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_channels_ch2_address0 <= grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch2_address0;

    -- in_channels_ch2_ce0 assign process. --
    in_channels_ch2_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch2_ce0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            in_channels_ch2_ce0 <= grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch2_ce0;
        else 
            in_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_channels_ch3_address0 <= grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch3_address0;

    -- in_channels_ch3_ce0 assign process. --
    in_channels_ch3_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch3_ce0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            in_channels_ch3_ce0 <= grp_yuv_filter_rgb2yuv_fu_115_in_channels_ch3_ce0;
        else 
            in_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_channels_ch1_address0 <= grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_address0;

    -- out_channels_ch1_ce0 assign process. --
    out_channels_ch1_ce0_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_ce0, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_channels_ch1_ce0 <= grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_ce0;
        else 
            out_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_channels_ch1_d0 <= grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_d0;

    -- out_channels_ch1_we0 assign process. --
    out_channels_ch1_we0_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_we0, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_channels_ch1_we0 <= grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch1_we0;
        else 
            out_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_channels_ch2_address0 <= grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_address0;

    -- out_channels_ch2_ce0 assign process. --
    out_channels_ch2_ce0_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_ce0, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_channels_ch2_ce0 <= grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_ce0;
        else 
            out_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_channels_ch2_d0 <= grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_d0;

    -- out_channels_ch2_we0 assign process. --
    out_channels_ch2_we0_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_we0, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_channels_ch2_we0 <= grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch2_we0;
        else 
            out_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_channels_ch3_address0 <= grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_address0;

    -- out_channels_ch3_ce0 assign process. --
    out_channels_ch3_ce0_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_ce0, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_channels_ch3_ce0 <= grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_ce0;
        else 
            out_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_channels_ch3_d0 <= grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_d0;

    -- out_channels_ch3_we0 assign process. --
    out_channels_ch3_we0_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_we0, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_channels_ch3_we0 <= grp_yuv_filter_yuv2rgb_fu_135_out_channels_ch3_we0;
        else 
            out_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_height <= grp_yuv_filter_yuv2rgb_fu_135_ap_return_1;

    -- out_height_ap_vld assign process. --
    out_height_ap_vld_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_135_ap_done, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_135_ap_done)))) then 
            out_height_ap_vld <= ap_const_logic_1;
        else 
            out_height_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_width <= grp_yuv_filter_yuv2rgb_fu_135_ap_return_0;

    -- out_width_ap_vld assign process. --
    out_width_ap_vld_assign_proc : process(grp_yuv_filter_yuv2rgb_fu_135_ap_done, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_logic_0 = grp_yuv_filter_yuv2rgb_fu_135_ap_done)))) then 
            out_width_ap_vld <= ap_const_logic_1;
        else 
            out_width_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    -- p_scale_channels_ch1_address0 assign process. --
    p_scale_channels_ch1_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch1_address0, grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_address0, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_scale_channels_ch1_address0 <= grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            p_scale_channels_ch1_address0 <= grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch1_address0;
        else 
            p_scale_channels_ch1_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- p_scale_channels_ch1_ce0 assign process. --
    p_scale_channels_ch1_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch1_ce0, grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_ce0, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_scale_channels_ch1_ce0 <= grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            p_scale_channels_ch1_ce0 <= grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch1_ce0;
        else 
            p_scale_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_scale_channels_ch1_d0 <= grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_d0;

    -- p_scale_channels_ch1_we0 assign process. --
    p_scale_channels_ch1_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_scale_channels_ch1_we0 <= grp_yuv_filter_yuv_scale_fu_150_out_channels_ch1_we0;
        else 
            p_scale_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- p_scale_channels_ch2_address0 assign process. --
    p_scale_channels_ch2_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch2_address0, grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_address0, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_scale_channels_ch2_address0 <= grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            p_scale_channels_ch2_address0 <= grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch2_address0;
        else 
            p_scale_channels_ch2_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- p_scale_channels_ch2_ce0 assign process. --
    p_scale_channels_ch2_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch2_ce0, grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_ce0, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_scale_channels_ch2_ce0 <= grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            p_scale_channels_ch2_ce0 <= grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch2_ce0;
        else 
            p_scale_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_scale_channels_ch2_d0 <= grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_d0;

    -- p_scale_channels_ch2_we0 assign process. --
    p_scale_channels_ch2_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_scale_channels_ch2_we0 <= grp_yuv_filter_yuv_scale_fu_150_out_channels_ch2_we0;
        else 
            p_scale_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- p_scale_channels_ch3_address0 assign process. --
    p_scale_channels_ch3_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch3_address0, grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_address0, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_scale_channels_ch3_address0 <= grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            p_scale_channels_ch3_address0 <= grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch3_address0;
        else 
            p_scale_channels_ch3_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- p_scale_channels_ch3_ce0 assign process. --
    p_scale_channels_ch3_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch3_ce0, grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_ce0, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_scale_channels_ch3_ce0 <= grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            p_scale_channels_ch3_ce0 <= grp_yuv_filter_yuv2rgb_fu_135_in_channels_ch3_ce0;
        else 
            p_scale_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_scale_channels_ch3_d0 <= grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_d0;

    -- p_scale_channels_ch3_we0 assign process. --
    p_scale_channels_ch3_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_scale_channels_ch3_we0 <= grp_yuv_filter_yuv_scale_fu_150_out_channels_ch3_we0;
        else 
            p_scale_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- p_yuv_channels_ch1_address0 assign process. --
    p_yuv_channels_ch1_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_address0, grp_yuv_filter_yuv_scale_fu_150_in_channels_ch1_address0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_yuv_channels_ch1_address0 <= grp_yuv_filter_yuv_scale_fu_150_in_channels_ch1_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch1_address0 <= grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_address0;
        else 
            p_yuv_channels_ch1_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- p_yuv_channels_ch1_ce0 assign process. --
    p_yuv_channels_ch1_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_ce0, grp_yuv_filter_yuv_scale_fu_150_in_channels_ch1_ce0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_yuv_channels_ch1_ce0 <= grp_yuv_filter_yuv_scale_fu_150_in_channels_ch1_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch1_ce0 <= grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_ce0;
        else 
            p_yuv_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_yuv_channels_ch1_d0 <= grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_d0;

    -- p_yuv_channels_ch1_we0 assign process. --
    p_yuv_channels_ch1_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch1_we0 <= grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch1_we0;
        else 
            p_yuv_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- p_yuv_channels_ch2_address0 assign process. --
    p_yuv_channels_ch2_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_address0, grp_yuv_filter_yuv_scale_fu_150_in_channels_ch2_address0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_yuv_channels_ch2_address0 <= grp_yuv_filter_yuv_scale_fu_150_in_channels_ch2_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch2_address0 <= grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_address0;
        else 
            p_yuv_channels_ch2_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- p_yuv_channels_ch2_ce0 assign process. --
    p_yuv_channels_ch2_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_ce0, grp_yuv_filter_yuv_scale_fu_150_in_channels_ch2_ce0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_yuv_channels_ch2_ce0 <= grp_yuv_filter_yuv_scale_fu_150_in_channels_ch2_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch2_ce0 <= grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_ce0;
        else 
            p_yuv_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_yuv_channels_ch2_d0 <= grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_d0;

    -- p_yuv_channels_ch2_we0 assign process. --
    p_yuv_channels_ch2_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch2_we0 <= grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch2_we0;
        else 
            p_yuv_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- p_yuv_channels_ch3_address0 assign process. --
    p_yuv_channels_ch3_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_address0, grp_yuv_filter_yuv_scale_fu_150_in_channels_ch3_address0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_yuv_channels_ch3_address0 <= grp_yuv_filter_yuv_scale_fu_150_in_channels_ch3_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch3_address0 <= grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_address0;
        else 
            p_yuv_channels_ch3_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- p_yuv_channels_ch3_ce0 assign process. --
    p_yuv_channels_ch3_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_ce0, grp_yuv_filter_yuv_scale_fu_150_in_channels_ch3_ce0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            p_yuv_channels_ch3_ce0 <= grp_yuv_filter_yuv_scale_fu_150_in_channels_ch3_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch3_ce0 <= grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_ce0;
        else 
            p_yuv_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_yuv_channels_ch3_d0 <= grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_d0;

    -- p_yuv_channels_ch3_we0 assign process. --
    p_yuv_channels_ch3_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_we0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_yuv_channels_ch3_we0 <= grp_yuv_filter_rgb2yuv_fu_115_out_channels_ch3_we0;
        else 
            p_yuv_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
