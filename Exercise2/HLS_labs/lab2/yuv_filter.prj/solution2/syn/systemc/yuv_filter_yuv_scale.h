// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _yuv_filter_yuv_scale_HH_
#define _yuv_filter_yuv_scale_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct yuv_filter_yuv_scale : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<22> > in_channels_ch1_address0;
    sc_out< sc_logic > in_channels_ch1_ce0;
    sc_in< sc_lv<8> > in_channels_ch1_q0;
    sc_out< sc_lv<22> > in_channels_ch2_address0;
    sc_out< sc_logic > in_channels_ch2_ce0;
    sc_in< sc_lv<8> > in_channels_ch2_q0;
    sc_out< sc_lv<22> > in_channels_ch3_address0;
    sc_out< sc_logic > in_channels_ch3_ce0;
    sc_in< sc_lv<8> > in_channels_ch3_q0;
    sc_in< sc_lv<16> > in_width_read;
    sc_in< sc_lv<16> > in_height_read;
    sc_out< sc_lv<22> > out_channels_ch1_address0;
    sc_out< sc_logic > out_channels_ch1_ce0;
    sc_out< sc_logic > out_channels_ch1_we0;
    sc_out< sc_lv<8> > out_channels_ch1_d0;
    sc_out< sc_lv<22> > out_channels_ch2_address0;
    sc_out< sc_logic > out_channels_ch2_ce0;
    sc_out< sc_logic > out_channels_ch2_we0;
    sc_out< sc_lv<8> > out_channels_ch2_d0;
    sc_out< sc_lv<22> > out_channels_ch3_address0;
    sc_out< sc_logic > out_channels_ch3_ce0;
    sc_out< sc_logic > out_channels_ch3_we0;
    sc_out< sc_lv<8> > out_channels_ch3_d0;
    sc_in< sc_lv<8> > Y_scale;
    sc_in< sc_lv<8> > U_scale;
    sc_in< sc_lv<8> > V_scale;
    sc_out< sc_lv<16> > ap_return_0;
    sc_out< sc_lv<16> > ap_return_1;


    // Module declarations
    yuv_filter_yuv_scale(sc_module_name name);
    SC_HAS_PROCESS(yuv_filter_yuv_scale);

    ~yuv_filter_yuv_scale();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<32> > indvar_flatten_reg_176;
    sc_signal< sc_lv<16> > x_reg_187;
    sc_signal< sc_lv<16> > y_reg_198;
    sc_signal< sc_lv<15> > tmp_cast_fu_210_p1;
    sc_signal< sc_lv<15> > tmp_cast_reg_399;
    sc_signal< sc_lv<15> > tmp_cast_15_fu_214_p1;
    sc_signal< sc_lv<15> > tmp_cast_15_reg_404;
    sc_signal< sc_lv<15> > tmp_28_cast_fu_218_p1;
    sc_signal< sc_lv<15> > tmp_28_cast_reg_409;
    sc_signal< sc_lv<32> > bound_fu_230_p2;
    sc_signal< sc_lv<32> > bound_reg_414;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_236_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_419;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_101;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it4;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it3;
    sc_signal< sc_lv<32> > indvar_flatten_next_fu_241_p2;
    sc_signal< sc_lv<16> > y_mid2_fu_252_p3;
    sc_signal< sc_lv<16> > y_mid2_reg_428;
    sc_signal< sc_lv<16> > x_mid2_fu_266_p3;
    sc_signal< sc_lv<16> > x_mid2_reg_433;
    sc_signal< sc_lv<16> > y_2_fu_274_p2;
    sc_signal< sc_lv<64> > tmp_6_fu_317_p1;
    sc_signal< sc_lv<64> > tmp_6_reg_445;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_445_pp0_it2;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_445_pp0_it3;
    sc_signal< sc_lv<8> > Y_reg_467;
    sc_signal< sc_lv<8> > U_reg_472;
    sc_signal< sc_lv<8> > V_reg_477;
    sc_signal< sc_lv<8> > tmp_19_reg_482;
    sc_signal< sc_lv<8> > tmp_20_reg_487;
    sc_signal< sc_lv<8> > tmp_21_reg_492;
    sc_signal< sc_lv<16> > x_phi_fu_191_p4;
    sc_signal< sc_lv<16> > bound_fu_230_p0;
    sc_signal< sc_lv<16> > bound_fu_230_p1;
    sc_signal< sc_lv<1> > exitcond_fu_247_p2;
    sc_signal< sc_lv<16> > x_s_fu_260_p2;
    sc_signal< sc_lv<26> > tmp_fu_283_p3;
    sc_signal< sc_lv<24> > tmp_5_fu_294_p3;
    sc_signal< sc_lv<27> > p_shl_cast_fu_290_p1;
    sc_signal< sc_lv<27> > p_shl8_cast_fu_301_p1;
    sc_signal< sc_lv<27> > p_addr_fu_305_p2;
    sc_signal< sc_lv<27> > tmp_21_trn_cast_fu_280_p1;
    sc_signal< sc_lv<27> > p_addr1_fu_311_p2;
    sc_signal< sc_lv<8> > tmp_16_fu_327_p0;
    sc_signal< sc_lv<8> > tmp_16_fu_327_p1;
    sc_signal< sc_lv<8> > tmp_17_fu_335_p0;
    sc_signal< sc_lv<8> > tmp_17_fu_335_p1;
    sc_signal< sc_lv<8> > tmp_18_fu_343_p0;
    sc_signal< sc_lv<8> > tmp_18_fu_343_p1;
    sc_signal< sc_lv<15> > tmp_16_fu_327_p2;
    sc_signal< sc_lv<15> > tmp_17_fu_335_p2;
    sc_signal< sc_lv<15> > tmp_18_fu_343_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_2;
    sc_signal< bool > ap_sig_bdd_256;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_lv<32> > bound_fu_230_p00;
    sc_signal< sc_lv<32> > bound_fu_230_p10;
    sc_signal< sc_lv<15> > tmp_16_fu_327_p00;
    sc_signal< sc_lv<15> > tmp_17_fu_335_p00;
    sc_signal< sc_lv<15> > tmp_18_fu_343_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st7_fsm_2;
    static const bool ap_true;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_sig_bdd_101();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_256();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st7_fsm_2();
    void thread_bound_fu_230_p0();
    void thread_bound_fu_230_p00();
    void thread_bound_fu_230_p1();
    void thread_bound_fu_230_p10();
    void thread_bound_fu_230_p2();
    void thread_exitcond_flatten_fu_236_p2();
    void thread_exitcond_fu_247_p2();
    void thread_in_channels_ch1_address0();
    void thread_in_channels_ch1_ce0();
    void thread_in_channels_ch2_address0();
    void thread_in_channels_ch2_ce0();
    void thread_in_channels_ch3_address0();
    void thread_in_channels_ch3_ce0();
    void thread_indvar_flatten_next_fu_241_p2();
    void thread_out_channels_ch1_address0();
    void thread_out_channels_ch1_ce0();
    void thread_out_channels_ch1_d0();
    void thread_out_channels_ch1_we0();
    void thread_out_channels_ch2_address0();
    void thread_out_channels_ch2_ce0();
    void thread_out_channels_ch2_d0();
    void thread_out_channels_ch2_we0();
    void thread_out_channels_ch3_address0();
    void thread_out_channels_ch3_ce0();
    void thread_out_channels_ch3_d0();
    void thread_out_channels_ch3_we0();
    void thread_p_addr1_fu_311_p2();
    void thread_p_addr_fu_305_p2();
    void thread_p_shl8_cast_fu_301_p1();
    void thread_p_shl_cast_fu_290_p1();
    void thread_tmp_16_fu_327_p0();
    void thread_tmp_16_fu_327_p00();
    void thread_tmp_16_fu_327_p1();
    void thread_tmp_16_fu_327_p2();
    void thread_tmp_17_fu_335_p0();
    void thread_tmp_17_fu_335_p00();
    void thread_tmp_17_fu_335_p1();
    void thread_tmp_17_fu_335_p2();
    void thread_tmp_18_fu_343_p0();
    void thread_tmp_18_fu_343_p00();
    void thread_tmp_18_fu_343_p1();
    void thread_tmp_18_fu_343_p2();
    void thread_tmp_21_trn_cast_fu_280_p1();
    void thread_tmp_28_cast_fu_218_p1();
    void thread_tmp_5_fu_294_p3();
    void thread_tmp_6_fu_317_p1();
    void thread_tmp_cast_15_fu_214_p1();
    void thread_tmp_cast_fu_210_p1();
    void thread_tmp_fu_283_p3();
    void thread_x_mid2_fu_266_p3();
    void thread_x_phi_fu_191_p4();
    void thread_x_s_fu_260_p2();
    void thread_y_2_fu_274_p2();
    void thread_y_mid2_fu_252_p3();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
