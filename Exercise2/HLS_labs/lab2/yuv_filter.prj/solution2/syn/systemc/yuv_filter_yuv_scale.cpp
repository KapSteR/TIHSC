// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "yuv_filter_yuv_scale.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic yuv_filter_yuv_scale::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic yuv_filter_yuv_scale::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> yuv_filter_yuv_scale::ap_ST_st1_fsm_0 = "1";
const sc_lv<3> yuv_filter_yuv_scale::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<3> yuv_filter_yuv_scale::ap_ST_st7_fsm_2 = "100";
const bool yuv_filter_yuv_scale::ap_true = true;
const sc_lv<32> yuv_filter_yuv_scale::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> yuv_filter_yuv_scale::ap_const_lv1_1 = "1";
const sc_lv<32> yuv_filter_yuv_scale::ap_const_lv32_1 = "1";
const sc_lv<1> yuv_filter_yuv_scale::ap_const_lv1_0 = "0";
const sc_lv<16> yuv_filter_yuv_scale::ap_const_lv16_0 = "0000000000000000";
const sc_lv<16> yuv_filter_yuv_scale::ap_const_lv16_1 = "1";
const sc_lv<10> yuv_filter_yuv_scale::ap_const_lv10_0 = "0000000000";
const sc_lv<8> yuv_filter_yuv_scale::ap_const_lv8_0 = "00000000";
const sc_lv<32> yuv_filter_yuv_scale::ap_const_lv32_7 = "111";
const sc_lv<32> yuv_filter_yuv_scale::ap_const_lv32_E = "1110";
const sc_lv<32> yuv_filter_yuv_scale::ap_const_lv32_2 = "10";

yuv_filter_yuv_scale::yuv_filter_yuv_scale(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st7_fsm_2 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( in_width_read );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_2 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( in_height_read );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_2 );

    SC_METHOD(thread_ap_sig_bdd_101);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_256);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_bdd_101 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_21 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_2);
    sensitive << ( ap_sig_bdd_256 );

    SC_METHOD(thread_bound_fu_230_p0);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( bound_fu_230_p00 );

    SC_METHOD(thread_bound_fu_230_p00);
    sensitive << ( in_width_read );

    SC_METHOD(thread_bound_fu_230_p1);
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( bound_fu_230_p10 );

    SC_METHOD(thread_bound_fu_230_p10);
    sensitive << ( in_height_read );

    SC_METHOD(thread_bound_fu_230_p2);
    sensitive << ( bound_fu_230_p0 );
    sensitive << ( bound_fu_230_p1 );

    SC_METHOD(thread_exitcond_flatten_fu_236_p2);
    sensitive << ( indvar_flatten_reg_176 );
    sensitive << ( bound_reg_414 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_exitcond_fu_247_p2);
    sensitive << ( in_height_read );
    sensitive << ( y_reg_198 );
    sensitive << ( exitcond_flatten_fu_236_p2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );

    SC_METHOD(thread_in_channels_ch1_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_6_fu_317_p1 );

    SC_METHOD(thread_in_channels_ch1_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_in_channels_ch2_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_6_fu_317_p1 );

    SC_METHOD(thread_in_channels_ch2_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_in_channels_ch3_address0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_6_fu_317_p1 );

    SC_METHOD(thread_in_channels_ch3_ce0);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );

    SC_METHOD(thread_indvar_flatten_next_fu_241_p2);
    sensitive << ( indvar_flatten_reg_176 );

    SC_METHOD(thread_out_channels_ch1_address0);
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppstg_tmp_6_reg_445_pp0_it3 );

    SC_METHOD(thread_out_channels_ch1_ce0);
    sensitive << ( ap_reg_ppiten_pp0_it4 );

    SC_METHOD(thread_out_channels_ch1_d0);
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( tmp_19_reg_482 );

    SC_METHOD(thread_out_channels_ch1_we0);
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it3 );

    SC_METHOD(thread_out_channels_ch2_address0);
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppstg_tmp_6_reg_445_pp0_it3 );

    SC_METHOD(thread_out_channels_ch2_ce0);
    sensitive << ( ap_reg_ppiten_pp0_it4 );

    SC_METHOD(thread_out_channels_ch2_d0);
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( tmp_20_reg_487 );

    SC_METHOD(thread_out_channels_ch2_we0);
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it3 );

    SC_METHOD(thread_out_channels_ch3_address0);
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppstg_tmp_6_reg_445_pp0_it3 );

    SC_METHOD(thread_out_channels_ch3_ce0);
    sensitive << ( ap_reg_ppiten_pp0_it4 );

    SC_METHOD(thread_out_channels_ch3_d0);
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( tmp_21_reg_492 );

    SC_METHOD(thread_out_channels_ch3_we0);
    sensitive << ( ap_reg_ppiten_pp0_it4 );
    sensitive << ( ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it3 );

    SC_METHOD(thread_p_addr1_fu_311_p2);
    sensitive << ( p_addr_fu_305_p2 );
    sensitive << ( tmp_21_trn_cast_fu_280_p1 );

    SC_METHOD(thread_p_addr_fu_305_p2);
    sensitive << ( p_shl_cast_fu_290_p1 );
    sensitive << ( p_shl8_cast_fu_301_p1 );

    SC_METHOD(thread_p_shl8_cast_fu_301_p1);
    sensitive << ( tmp_5_fu_294_p3 );

    SC_METHOD(thread_p_shl_cast_fu_290_p1);
    sensitive << ( tmp_fu_283_p3 );

    SC_METHOD(thread_tmp_16_fu_327_p0);
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( tmp_16_fu_327_p00 );

    SC_METHOD(thread_tmp_16_fu_327_p00);
    sensitive << ( Y_reg_467 );

    SC_METHOD(thread_tmp_16_fu_327_p1);
    sensitive << ( tmp_cast_reg_399 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_tmp_16_fu_327_p2);
    sensitive << ( tmp_16_fu_327_p0 );
    sensitive << ( tmp_16_fu_327_p1 );

    SC_METHOD(thread_tmp_17_fu_335_p0);
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( tmp_17_fu_335_p00 );

    SC_METHOD(thread_tmp_17_fu_335_p00);
    sensitive << ( U_reg_472 );

    SC_METHOD(thread_tmp_17_fu_335_p1);
    sensitive << ( tmp_cast_15_reg_404 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_tmp_17_fu_335_p2);
    sensitive << ( tmp_17_fu_335_p0 );
    sensitive << ( tmp_17_fu_335_p1 );

    SC_METHOD(thread_tmp_18_fu_343_p0);
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( tmp_18_fu_343_p00 );

    SC_METHOD(thread_tmp_18_fu_343_p00);
    sensitive << ( V_reg_477 );

    SC_METHOD(thread_tmp_18_fu_343_p1);
    sensitive << ( tmp_28_cast_reg_409 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_tmp_18_fu_343_p2);
    sensitive << ( tmp_18_fu_343_p0 );
    sensitive << ( tmp_18_fu_343_p1 );

    SC_METHOD(thread_tmp_21_trn_cast_fu_280_p1);
    sensitive << ( y_mid2_reg_428 );

    SC_METHOD(thread_tmp_28_cast_fu_218_p1);
    sensitive << ( V_scale );

    SC_METHOD(thread_tmp_5_fu_294_p3);
    sensitive << ( x_mid2_reg_433 );

    SC_METHOD(thread_tmp_6_fu_317_p1);
    sensitive << ( p_addr1_fu_311_p2 );

    SC_METHOD(thread_tmp_cast_15_fu_214_p1);
    sensitive << ( U_scale );

    SC_METHOD(thread_tmp_cast_fu_210_p1);
    sensitive << ( Y_scale );

    SC_METHOD(thread_tmp_fu_283_p3);
    sensitive << ( x_mid2_reg_433 );

    SC_METHOD(thread_x_mid2_fu_266_p3);
    sensitive << ( x_phi_fu_191_p4 );
    sensitive << ( exitcond_fu_247_p2 );
    sensitive << ( x_s_fu_260_p2 );

    SC_METHOD(thread_x_phi_fu_191_p4);
    sensitive << ( x_reg_187 );
    sensitive << ( exitcond_flatten_reg_419 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( x_mid2_reg_433 );

    SC_METHOD(thread_x_s_fu_260_p2);
    sensitive << ( x_phi_fu_191_p4 );

    SC_METHOD(thread_y_2_fu_274_p2);
    sensitive << ( y_mid2_fu_252_p3 );

    SC_METHOD(thread_y_mid2_fu_252_p3);
    sensitive << ( y_reg_198 );
    sensitive << ( exitcond_fu_247_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_flatten_fu_236_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( ap_reg_ppiten_pp0_it4 );

    ap_CS_fsm = "001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it3 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it4 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "yuv_filter_yuv_scale_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_channels_ch1_address0, "(port)in_channels_ch1_address0");
    sc_trace(mVcdFile, in_channels_ch1_ce0, "(port)in_channels_ch1_ce0");
    sc_trace(mVcdFile, in_channels_ch1_q0, "(port)in_channels_ch1_q0");
    sc_trace(mVcdFile, in_channels_ch2_address0, "(port)in_channels_ch2_address0");
    sc_trace(mVcdFile, in_channels_ch2_ce0, "(port)in_channels_ch2_ce0");
    sc_trace(mVcdFile, in_channels_ch2_q0, "(port)in_channels_ch2_q0");
    sc_trace(mVcdFile, in_channels_ch3_address0, "(port)in_channels_ch3_address0");
    sc_trace(mVcdFile, in_channels_ch3_ce0, "(port)in_channels_ch3_ce0");
    sc_trace(mVcdFile, in_channels_ch3_q0, "(port)in_channels_ch3_q0");
    sc_trace(mVcdFile, in_width_read, "(port)in_width_read");
    sc_trace(mVcdFile, in_height_read, "(port)in_height_read");
    sc_trace(mVcdFile, out_channels_ch1_address0, "(port)out_channels_ch1_address0");
    sc_trace(mVcdFile, out_channels_ch1_ce0, "(port)out_channels_ch1_ce0");
    sc_trace(mVcdFile, out_channels_ch1_we0, "(port)out_channels_ch1_we0");
    sc_trace(mVcdFile, out_channels_ch1_d0, "(port)out_channels_ch1_d0");
    sc_trace(mVcdFile, out_channels_ch2_address0, "(port)out_channels_ch2_address0");
    sc_trace(mVcdFile, out_channels_ch2_ce0, "(port)out_channels_ch2_ce0");
    sc_trace(mVcdFile, out_channels_ch2_we0, "(port)out_channels_ch2_we0");
    sc_trace(mVcdFile, out_channels_ch2_d0, "(port)out_channels_ch2_d0");
    sc_trace(mVcdFile, out_channels_ch3_address0, "(port)out_channels_ch3_address0");
    sc_trace(mVcdFile, out_channels_ch3_ce0, "(port)out_channels_ch3_ce0");
    sc_trace(mVcdFile, out_channels_ch3_we0, "(port)out_channels_ch3_we0");
    sc_trace(mVcdFile, out_channels_ch3_d0, "(port)out_channels_ch3_d0");
    sc_trace(mVcdFile, Y_scale, "(port)Y_scale");
    sc_trace(mVcdFile, U_scale, "(port)U_scale");
    sc_trace(mVcdFile, V_scale, "(port)V_scale");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_21, "ap_sig_bdd_21");
    sc_trace(mVcdFile, indvar_flatten_reg_176, "indvar_flatten_reg_176");
    sc_trace(mVcdFile, x_reg_187, "x_reg_187");
    sc_trace(mVcdFile, y_reg_198, "y_reg_198");
    sc_trace(mVcdFile, tmp_cast_fu_210_p1, "tmp_cast_fu_210_p1");
    sc_trace(mVcdFile, tmp_cast_reg_399, "tmp_cast_reg_399");
    sc_trace(mVcdFile, tmp_cast_15_fu_214_p1, "tmp_cast_15_fu_214_p1");
    sc_trace(mVcdFile, tmp_cast_15_reg_404, "tmp_cast_15_reg_404");
    sc_trace(mVcdFile, tmp_28_cast_fu_218_p1, "tmp_28_cast_fu_218_p1");
    sc_trace(mVcdFile, tmp_28_cast_reg_409, "tmp_28_cast_reg_409");
    sc_trace(mVcdFile, bound_fu_230_p2, "bound_fu_230_p2");
    sc_trace(mVcdFile, bound_reg_414, "bound_reg_414");
    sc_trace(mVcdFile, exitcond_flatten_fu_236_p2, "exitcond_flatten_fu_236_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_419, "exitcond_flatten_reg_419");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_101, "ap_sig_bdd_101");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it3, "ap_reg_ppiten_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it4, "ap_reg_ppiten_pp0_it4");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it1, "ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it2, "ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it3, "ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it3");
    sc_trace(mVcdFile, indvar_flatten_next_fu_241_p2, "indvar_flatten_next_fu_241_p2");
    sc_trace(mVcdFile, y_mid2_fu_252_p3, "y_mid2_fu_252_p3");
    sc_trace(mVcdFile, y_mid2_reg_428, "y_mid2_reg_428");
    sc_trace(mVcdFile, x_mid2_fu_266_p3, "x_mid2_fu_266_p3");
    sc_trace(mVcdFile, x_mid2_reg_433, "x_mid2_reg_433");
    sc_trace(mVcdFile, y_2_fu_274_p2, "y_2_fu_274_p2");
    sc_trace(mVcdFile, tmp_6_fu_317_p1, "tmp_6_fu_317_p1");
    sc_trace(mVcdFile, tmp_6_reg_445, "tmp_6_reg_445");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_6_reg_445_pp0_it2, "ap_reg_ppstg_tmp_6_reg_445_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_6_reg_445_pp0_it3, "ap_reg_ppstg_tmp_6_reg_445_pp0_it3");
    sc_trace(mVcdFile, Y_reg_467, "Y_reg_467");
    sc_trace(mVcdFile, U_reg_472, "U_reg_472");
    sc_trace(mVcdFile, V_reg_477, "V_reg_477");
    sc_trace(mVcdFile, tmp_19_reg_482, "tmp_19_reg_482");
    sc_trace(mVcdFile, tmp_20_reg_487, "tmp_20_reg_487");
    sc_trace(mVcdFile, tmp_21_reg_492, "tmp_21_reg_492");
    sc_trace(mVcdFile, x_phi_fu_191_p4, "x_phi_fu_191_p4");
    sc_trace(mVcdFile, bound_fu_230_p0, "bound_fu_230_p0");
    sc_trace(mVcdFile, bound_fu_230_p1, "bound_fu_230_p1");
    sc_trace(mVcdFile, exitcond_fu_247_p2, "exitcond_fu_247_p2");
    sc_trace(mVcdFile, x_s_fu_260_p2, "x_s_fu_260_p2");
    sc_trace(mVcdFile, tmp_fu_283_p3, "tmp_fu_283_p3");
    sc_trace(mVcdFile, tmp_5_fu_294_p3, "tmp_5_fu_294_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_290_p1, "p_shl_cast_fu_290_p1");
    sc_trace(mVcdFile, p_shl8_cast_fu_301_p1, "p_shl8_cast_fu_301_p1");
    sc_trace(mVcdFile, p_addr_fu_305_p2, "p_addr_fu_305_p2");
    sc_trace(mVcdFile, tmp_21_trn_cast_fu_280_p1, "tmp_21_trn_cast_fu_280_p1");
    sc_trace(mVcdFile, p_addr1_fu_311_p2, "p_addr1_fu_311_p2");
    sc_trace(mVcdFile, tmp_16_fu_327_p0, "tmp_16_fu_327_p0");
    sc_trace(mVcdFile, tmp_16_fu_327_p1, "tmp_16_fu_327_p1");
    sc_trace(mVcdFile, tmp_17_fu_335_p0, "tmp_17_fu_335_p0");
    sc_trace(mVcdFile, tmp_17_fu_335_p1, "tmp_17_fu_335_p1");
    sc_trace(mVcdFile, tmp_18_fu_343_p0, "tmp_18_fu_343_p0");
    sc_trace(mVcdFile, tmp_18_fu_343_p1, "tmp_18_fu_343_p1");
    sc_trace(mVcdFile, tmp_16_fu_327_p2, "tmp_16_fu_327_p2");
    sc_trace(mVcdFile, tmp_17_fu_335_p2, "tmp_17_fu_335_p2");
    sc_trace(mVcdFile, tmp_18_fu_343_p2, "tmp_18_fu_343_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_2, "ap_sig_cseq_ST_st7_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_256, "ap_sig_bdd_256");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, bound_fu_230_p00, "bound_fu_230_p00");
    sc_trace(mVcdFile, bound_fu_230_p10, "bound_fu_230_p10");
    sc_trace(mVcdFile, tmp_16_fu_327_p00, "tmp_16_fu_327_p00");
    sc_trace(mVcdFile, tmp_17_fu_335_p00, "tmp_17_fu_335_p00");
    sc_trace(mVcdFile, tmp_18_fu_343_p00, "tmp_18_fu_343_p00");
#endif

    }
}

yuv_filter_yuv_scale::~yuv_filter_yuv_scale() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void yuv_filter_yuv_scale::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !esl_seteq<1,1,1>(exitcond_flatten_fu_236_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             esl_seteq<1,1,1>(exitcond_flatten_fu_236_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                     !esl_seteq<1,1,1>(exitcond_flatten_fu_236_p2.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            ap_reg_ppiten_pp0_it3 = ap_reg_ppiten_pp0_it2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_true, ap_true)) {
            ap_reg_ppiten_pp0_it4 = ap_reg_ppiten_pp0_it3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it4 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_236_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_176 = indvar_flatten_next_fu_241_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar_flatten_reg_176 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_419.read(), ap_const_lv1_0))) {
        x_reg_187 = x_mid2_reg_433.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        x_reg_187 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_236_p2.read(), ap_const_lv1_0))) {
        y_reg_198 = y_2_fu_274_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        y_reg_198 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it1.read(), ap_const_lv1_0)) {
        U_reg_472 = in_channels_ch2_q0.read();
        V_reg_477 = in_channels_ch3_q0.read();
        Y_reg_467 = in_channels_ch1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read())) {
        ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it1 = exitcond_flatten_reg_419.read();
        exitcond_flatten_reg_419 = exitcond_flatten_fu_236_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_true, ap_true)) {
        ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it2 = ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it1.read();
        ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it3 = ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it2.read();
        ap_reg_ppstg_tmp_6_reg_445_pp0_it2 = tmp_6_reg_445.read();
        ap_reg_ppstg_tmp_6_reg_445_pp0_it3 = ap_reg_ppstg_tmp_6_reg_445_pp0_it2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        bound_reg_414 = bound_fu_230_p2.read();
        tmp_28_cast_reg_409 = tmp_28_cast_fu_218_p1.read();
        tmp_cast_15_reg_404 = tmp_cast_15_fu_214_p1.read();
        tmp_cast_reg_399 = tmp_cast_fu_210_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it2.read(), ap_const_lv1_0)) {
        tmp_19_reg_482 = tmp_16_fu_327_p2.read().range(14, 7);
        tmp_20_reg_487 = tmp_17_fu_335_p2.read().range(14, 7);
        tmp_21_reg_492 = tmp_18_fu_343_p2.read().range(14, 7);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_419.read(), ap_const_lv1_0))) {
        tmp_6_reg_445 = tmp_6_fu_317_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_236_p2.read(), ap_const_lv1_0))) {
        x_mid2_reg_433 = x_mid2_fu_266_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_236_p2.read(), ap_const_lv1_0))) {
        y_mid2_reg_428 = y_mid2_fu_252_p3.read();
    }
}

void yuv_filter_yuv_scale::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_ap_return_0() {
    ap_return_0 = in_width_read.read();
}

void yuv_filter_yuv_scale::thread_ap_return_1() {
    ap_return_1 = in_height_read.read();
}

void yuv_filter_yuv_scale::thread_ap_sig_bdd_101() {
    ap_sig_bdd_101 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void yuv_filter_yuv_scale::thread_ap_sig_bdd_21() {
    ap_sig_bdd_21 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void yuv_filter_yuv_scale::thread_ap_sig_bdd_256() {
    ap_sig_bdd_256 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void yuv_filter_yuv_scale::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_bdd_101.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_21.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_ap_sig_cseq_ST_st7_fsm_2() {
    if (ap_sig_bdd_256.read()) {
        ap_sig_cseq_ST_st7_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_2 = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_bound_fu_230_p0() {
    bound_fu_230_p0 =  (sc_lv<16>) (bound_fu_230_p00.read());
}

void yuv_filter_yuv_scale::thread_bound_fu_230_p00() {
    bound_fu_230_p00 = esl_zext<32,16>(in_width_read.read());
}

void yuv_filter_yuv_scale::thread_bound_fu_230_p1() {
    bound_fu_230_p1 =  (sc_lv<16>) (bound_fu_230_p10.read());
}

void yuv_filter_yuv_scale::thread_bound_fu_230_p10() {
    bound_fu_230_p10 = esl_zext<32,16>(in_height_read.read());
}

void yuv_filter_yuv_scale::thread_bound_fu_230_p2() {
    bound_fu_230_p2 = (!bound_fu_230_p0.read().is_01() || !bound_fu_230_p1.read().is_01())? sc_lv<32>(): sc_biguint<16>(bound_fu_230_p0.read()) * sc_biguint<16>(bound_fu_230_p1.read());
}

void yuv_filter_yuv_scale::thread_exitcond_flatten_fu_236_p2() {
    exitcond_flatten_fu_236_p2 = (!indvar_flatten_reg_176.read().is_01() || !bound_reg_414.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_176.read() == bound_reg_414.read());
}

void yuv_filter_yuv_scale::thread_exitcond_fu_247_p2() {
    exitcond_fu_247_p2 = (!y_reg_198.read().is_01() || !in_height_read.read().is_01())? sc_lv<1>(): sc_lv<1>(y_reg_198.read() == in_height_read.read());
}

void yuv_filter_yuv_scale::thread_in_channels_ch1_address0() {
    in_channels_ch1_address0 =  (sc_lv<22>) (tmp_6_fu_317_p1.read());
}

void yuv_filter_yuv_scale::thread_in_channels_ch1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        in_channels_ch1_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_in_channels_ch2_address0() {
    in_channels_ch2_address0 =  (sc_lv<22>) (tmp_6_fu_317_p1.read());
}

void yuv_filter_yuv_scale::thread_in_channels_ch2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        in_channels_ch2_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_in_channels_ch3_address0() {
    in_channels_ch3_address0 =  (sc_lv<22>) (tmp_6_fu_317_p1.read());
}

void yuv_filter_yuv_scale::thread_in_channels_ch3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        in_channels_ch3_ce0 = ap_const_logic_1;
    } else {
        in_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_indvar_flatten_next_fu_241_p2() {
    indvar_flatten_next_fu_241_p2 = (!indvar_flatten_reg_176.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(indvar_flatten_reg_176.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void yuv_filter_yuv_scale::thread_out_channels_ch1_address0() {
    out_channels_ch1_address0 =  (sc_lv<22>) (ap_reg_ppstg_tmp_6_reg_445_pp0_it3.read());
}

void yuv_filter_yuv_scale::thread_out_channels_ch1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it4.read())) {
        out_channels_ch1_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch1_ce0 = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_out_channels_ch1_d0() {
    out_channels_ch1_d0 = tmp_19_reg_482.read();
}

void yuv_filter_yuv_scale::thread_out_channels_ch1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it4.read()) && 
          esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it3.read(), ap_const_lv1_0)))) {
        out_channels_ch1_we0 = ap_const_logic_1;
    } else {
        out_channels_ch1_we0 = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_out_channels_ch2_address0() {
    out_channels_ch2_address0 =  (sc_lv<22>) (ap_reg_ppstg_tmp_6_reg_445_pp0_it3.read());
}

void yuv_filter_yuv_scale::thread_out_channels_ch2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it4.read())) {
        out_channels_ch2_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch2_ce0 = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_out_channels_ch2_d0() {
    out_channels_ch2_d0 = tmp_20_reg_487.read();
}

void yuv_filter_yuv_scale::thread_out_channels_ch2_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it4.read()) && 
          esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it3.read(), ap_const_lv1_0)))) {
        out_channels_ch2_we0 = ap_const_logic_1;
    } else {
        out_channels_ch2_we0 = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_out_channels_ch3_address0() {
    out_channels_ch3_address0 =  (sc_lv<22>) (ap_reg_ppstg_tmp_6_reg_445_pp0_it3.read());
}

void yuv_filter_yuv_scale::thread_out_channels_ch3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it4.read())) {
        out_channels_ch3_ce0 = ap_const_logic_1;
    } else {
        out_channels_ch3_ce0 = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_out_channels_ch3_d0() {
    out_channels_ch3_d0 = tmp_21_reg_492.read();
}

void yuv_filter_yuv_scale::thread_out_channels_ch3_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it4.read()) && 
          esl_seteq<1,1,1>(ap_reg_ppstg_exitcond_flatten_reg_419_pp0_it3.read(), ap_const_lv1_0)))) {
        out_channels_ch3_we0 = ap_const_logic_1;
    } else {
        out_channels_ch3_we0 = ap_const_logic_0;
    }
}

void yuv_filter_yuv_scale::thread_p_addr1_fu_311_p2() {
    p_addr1_fu_311_p2 = (!p_addr_fu_305_p2.read().is_01() || !tmp_21_trn_cast_fu_280_p1.read().is_01())? sc_lv<27>(): (sc_biguint<27>(p_addr_fu_305_p2.read()) + sc_biguint<27>(tmp_21_trn_cast_fu_280_p1.read()));
}

void yuv_filter_yuv_scale::thread_p_addr_fu_305_p2() {
    p_addr_fu_305_p2 = (!p_shl_cast_fu_290_p1.read().is_01() || !p_shl8_cast_fu_301_p1.read().is_01())? sc_lv<27>(): (sc_biguint<27>(p_shl_cast_fu_290_p1.read()) + sc_biguint<27>(p_shl8_cast_fu_301_p1.read()));
}

void yuv_filter_yuv_scale::thread_p_shl8_cast_fu_301_p1() {
    p_shl8_cast_fu_301_p1 = esl_zext<27,24>(tmp_5_fu_294_p3.read());
}

void yuv_filter_yuv_scale::thread_p_shl_cast_fu_290_p1() {
    p_shl_cast_fu_290_p1 = esl_zext<27,26>(tmp_fu_283_p3.read());
}

void yuv_filter_yuv_scale::thread_tmp_16_fu_327_p0() {
    tmp_16_fu_327_p0 =  (sc_lv<8>) (tmp_16_fu_327_p00.read());
}

void yuv_filter_yuv_scale::thread_tmp_16_fu_327_p00() {
    tmp_16_fu_327_p00 = esl_zext<15,8>(Y_reg_467.read());
}

void yuv_filter_yuv_scale::thread_tmp_16_fu_327_p1() {
    tmp_16_fu_327_p1 =  (sc_lv<8>) (tmp_cast_reg_399.read());
}

void yuv_filter_yuv_scale::thread_tmp_16_fu_327_p2() {
    tmp_16_fu_327_p2 = (!tmp_16_fu_327_p0.read().is_01() || !tmp_16_fu_327_p1.read().is_01())? sc_lv<15>(): sc_biguint<8>(tmp_16_fu_327_p0.read()) * sc_biguint<8>(tmp_16_fu_327_p1.read());
}

void yuv_filter_yuv_scale::thread_tmp_17_fu_335_p0() {
    tmp_17_fu_335_p0 =  (sc_lv<8>) (tmp_17_fu_335_p00.read());
}

void yuv_filter_yuv_scale::thread_tmp_17_fu_335_p00() {
    tmp_17_fu_335_p00 = esl_zext<15,8>(U_reg_472.read());
}

void yuv_filter_yuv_scale::thread_tmp_17_fu_335_p1() {
    tmp_17_fu_335_p1 =  (sc_lv<8>) (tmp_cast_15_reg_404.read());
}

void yuv_filter_yuv_scale::thread_tmp_17_fu_335_p2() {
    tmp_17_fu_335_p2 = (!tmp_17_fu_335_p0.read().is_01() || !tmp_17_fu_335_p1.read().is_01())? sc_lv<15>(): sc_biguint<8>(tmp_17_fu_335_p0.read()) * sc_biguint<8>(tmp_17_fu_335_p1.read());
}

void yuv_filter_yuv_scale::thread_tmp_18_fu_343_p0() {
    tmp_18_fu_343_p0 =  (sc_lv<8>) (tmp_18_fu_343_p00.read());
}

void yuv_filter_yuv_scale::thread_tmp_18_fu_343_p00() {
    tmp_18_fu_343_p00 = esl_zext<15,8>(V_reg_477.read());
}

void yuv_filter_yuv_scale::thread_tmp_18_fu_343_p1() {
    tmp_18_fu_343_p1 =  (sc_lv<8>) (tmp_28_cast_reg_409.read());
}

void yuv_filter_yuv_scale::thread_tmp_18_fu_343_p2() {
    tmp_18_fu_343_p2 = (!tmp_18_fu_343_p0.read().is_01() || !tmp_18_fu_343_p1.read().is_01())? sc_lv<15>(): sc_biguint<8>(tmp_18_fu_343_p0.read()) * sc_biguint<8>(tmp_18_fu_343_p1.read());
}

void yuv_filter_yuv_scale::thread_tmp_21_trn_cast_fu_280_p1() {
    tmp_21_trn_cast_fu_280_p1 = esl_zext<27,16>(y_mid2_reg_428.read());
}

void yuv_filter_yuv_scale::thread_tmp_28_cast_fu_218_p1() {
    tmp_28_cast_fu_218_p1 = esl_zext<15,8>(V_scale.read());
}

void yuv_filter_yuv_scale::thread_tmp_5_fu_294_p3() {
    tmp_5_fu_294_p3 = esl_concat<16,8>(x_mid2_reg_433.read(), ap_const_lv8_0);
}

void yuv_filter_yuv_scale::thread_tmp_6_fu_317_p1() {
    tmp_6_fu_317_p1 = esl_zext<64,27>(p_addr1_fu_311_p2.read());
}

void yuv_filter_yuv_scale::thread_tmp_cast_15_fu_214_p1() {
    tmp_cast_15_fu_214_p1 = esl_zext<15,8>(U_scale.read());
}

void yuv_filter_yuv_scale::thread_tmp_cast_fu_210_p1() {
    tmp_cast_fu_210_p1 = esl_zext<15,8>(Y_scale.read());
}

void yuv_filter_yuv_scale::thread_tmp_fu_283_p3() {
    tmp_fu_283_p3 = esl_concat<16,10>(x_mid2_reg_433.read(), ap_const_lv10_0);
}

void yuv_filter_yuv_scale::thread_x_mid2_fu_266_p3() {
    x_mid2_fu_266_p3 = (!exitcond_fu_247_p2.read()[0].is_01())? sc_lv<16>(): ((exitcond_fu_247_p2.read()[0].to_bool())? x_s_fu_260_p2.read(): x_phi_fu_191_p4.read());
}

void yuv_filter_yuv_scale::thread_x_phi_fu_191_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_419.read(), ap_const_lv1_0))) {
        x_phi_fu_191_p4 = x_mid2_reg_433.read();
    } else {
        x_phi_fu_191_p4 = x_reg_187.read();
    }
}

void yuv_filter_yuv_scale::thread_x_s_fu_260_p2() {
    x_s_fu_260_p2 = (!x_phi_fu_191_p4.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(x_phi_fu_191_p4.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void yuv_filter_yuv_scale::thread_y_2_fu_274_p2() {
    y_2_fu_274_p2 = (!y_mid2_fu_252_p3.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(y_mid2_fu_252_p3.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void yuv_filter_yuv_scale::thread_y_mid2_fu_252_p3() {
    y_mid2_fu_252_p3 = (!exitcond_fu_247_p2.read()[0].is_01())? sc_lv<16>(): ((exitcond_fu_247_p2.read()[0].to_bool())? ap_const_lv16_0: y_reg_198.read());
}

void yuv_filter_yuv_scale::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it4.read()) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !esl_seteq<1,1,1>(exitcond_flatten_fu_236_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !esl_seteq<1,1,1>(exitcond_flatten_fu_236_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
                ap_NS_fsm = ap_ST_st7_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st7_fsm_2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

