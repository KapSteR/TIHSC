

================================================================
== Vivado HLS Report for 'yuv_filter_yuv2rgb'
================================================================
* Date:           Fri May 08 13:11:21 2015

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        yuv_filter.prj
* Solution:       solution3
* Product family: zynq
* Target device:  xc7z010clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   8.00|      6.72|        1.00|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+---------+-------+---------+---------+
    |     Latency     |     Interval    | Pipeline|
    |  min  |   max   |  min  |   max   |   Type  |
    +-------+---------+-------+---------+---------+
    |  40007|  2457607|  40007|  2457607|   none  |
    +-------+---------+-------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------+-------+---------+----------+-----------+-----------+-----------------+----------+
        |                                 |     Latency     | Iteration|  Initiation Interval  |       Trip      |          |
        |            Loop Name            |  min  |   max   |  Latency |  achieved |   target  |      Count      | Pipelined|
        +---------------------------------+-------+---------+----------+-----------+-----------+-----------------+----------+
        |- YUV2RGB_LOOP_X_YUV2RGB_LOOP_Y  |  40004|  2457604|         6|          1|          1| 40000 ~ 2457600 |    yes   |
        +---------------------------------+-------+---------+----------+-----------+-----------+-----------------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+-------+-------+
|       Name      | BRAM_18K| DSP48E|   FF  |  LUT  |
+-----------------+---------+-------+-------+-------+
|Expression       |        -|      -|      -|      -|
|FIFO             |        -|      -|      -|      -|
|Instance         |        -|      -|      -|      -|
|Memory           |        -|      -|      -|      -|
|Multiplexer      |        -|      -|      -|      -|
|Register         |        -|      -|      -|      -|
+-----------------+---------+-------+-------+-------+
|Total            |        0|      0|      0|      0|
+-----------------+---------+-------+-------+-------+
|Available        |      120|     80|  35200|  17600|
+-----------------+---------+-------+-------+-------+
|Utilization (%)  |        0|      0|      0|      0|
+-----------------+---------+-------+-------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 9
* Pipeline: 1
  Pipeline-0: II = 1, D = 6, States = { 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	9  / (exitcond_flatten)
	4  / (!exitcond_flatten)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	3  / true
9 --> 
* FSM state operations: 

 <State 1>: 1.87ns
ST_1: width [1/1] 1.87ns
:5  %width = call i16 @_ssdm_op_Read.ap_fifo.i16P(i16* %in_width)

ST_1: height [1/1] 1.87ns
:6  %height = call i16 @_ssdm_op_Read.ap_fifo.i16P(i16* %in_height)


 <State 2>: 6.38ns
ST_2: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecInterface(i16* %in_height, [8 x i8]* @str79, i32 0, i32 0, i32 0, i32 0, [8 x i8]* @str79, [8 x i8]* @str79, [8 x i8]* @str79)

ST_2: empty_52 [1/1] 0.00ns
:1  %empty_52 = call i32 (...)* @_ssdm_op_SpecInterface(i16* %in_width, [8 x i8]* @str78, i32 0, i32 0, i32 0, i32 0, [8 x i8]* @str78, [8 x i8]* @str78, [8 x i8]* @str78)

ST_2: empty_53 [1/1] 0.00ns
:2  %empty_53 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %in_channels_ch3, [8 x i8]* @str77, i32 0, i32 0, i32 0, i32 0, [8 x i8]* @str77, [8 x i8]* @str77, [8 x i8]* @str77)

ST_2: empty_54 [1/1] 0.00ns
:3  %empty_54 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %in_channels_ch2, [8 x i8]* @str76, i32 0, i32 0, i32 0, i32 0, [8 x i8]* @str76, [8 x i8]* @str76, [8 x i8]* @str76)

ST_2: empty_55 [1/1] 0.00ns
:4  %empty_55 = call i32 (...)* @_ssdm_op_SpecInterface(i8* %in_channels_ch1, [8 x i8]* @str75, i32 0, i32 0, i32 0, i32 0, [8 x i8]* @str75, [8 x i8]* @str75, [8 x i8]* @str75)

ST_2: stg_17 [1/1] 0.00ns
:7  call void @_ssdm_op_Write.ap_auto.i16P(i16* %out_width, i16 %width)

ST_2: stg_18 [1/1] 0.00ns
:8  call void @_ssdm_op_Write.ap_auto.i16P(i16* %out_height, i16 %height)

ST_2: cast [1/1] 0.00ns
:9  %cast = zext i16 %width to i32

ST_2: cast1 [1/1] 0.00ns
:10  %cast1 = zext i16 %height to i32

ST_2: bound [1/1] 6.38ns
:11  %bound = mul i32 %cast, %cast1

ST_2: stg_22 [1/1] 1.57ns
:12  br label %1


 <State 3>: 5.61ns
ST_3: indvar_flatten [1/1] 0.00ns
:0  %indvar_flatten = phi i32 [ 0, %0 ], [ %indvar_flatten_next, %.reset ]

ST_3: x [1/1] 0.00ns
:1  %x = phi i16 [ 0, %0 ], [ %x_mid2, %.reset ]

ST_3: y [1/1] 0.00ns
:2  %y = phi i16 [ 0, %0 ], [ %y_2, %.reset ]

ST_3: exitcond_flatten [1/1] 2.52ns
:3  %exitcond_flatten = icmp eq i32 %indvar_flatten, %bound

ST_3: indvar_flatten_next [1/1] 2.44ns
:4  %indvar_flatten_next = add i32 %indvar_flatten, 1

ST_3: stg_28 [1/1] 0.00ns
:5  br i1 %exitcond_flatten, label %2, label %.reset

ST_3: exitcond [1/1] 2.28ns
.reset:2  %exitcond = icmp eq i16 %y, %height

ST_3: y_mid2 [1/1] 1.37ns
.reset:3  %y_mid2 = select i1 %exitcond, i16 0, i16 %y

ST_3: x_s [1/1] 1.96ns
.reset:4  %x_s = add i16 %x, 1

ST_3: x_mid2 [1/1] 1.37ns
.reset:5  %x_mid2 = select i1 %exitcond, i16 %x_s, i16 %x

ST_3: y_2 [1/1] 1.96ns
.reset:74  %y_2 = add i16 %y_mid2, 1


 <State 4>: 3.82ns
ST_4: Y [1/1] 1.70ns
.reset:9  %Y = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %in_channels_ch1)

ST_4: U [1/1] 1.70ns
.reset:10  %U = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %in_channels_ch2)

ST_4: V [1/1] 1.70ns
.reset:11  %V = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %in_channels_ch3)

ST_4: tmp_trn_cast [1/1] 0.00ns
.reset:59  %tmp_trn_cast = zext i16 %y_mid2 to i27

ST_4: tmp [1/1] 0.00ns
.reset:60  %tmp = call i26 @_ssdm_op_BitConcatenate.i26.i16.i10(i16 %x_mid2, i10 0)

ST_4: p_shl8_cast [1/1] 0.00ns
.reset:61  %p_shl8_cast = zext i26 %tmp to i27

ST_4: tmp_7 [1/1] 0.00ns
.reset:62  %tmp_7 = call i24 @_ssdm_op_BitConcatenate.i24.i16.i8(i16 %x_mid2, i8 0)

ST_4: p_shl9_cast [1/1] 0.00ns
.reset:63  %p_shl9_cast = zext i24 %tmp_7 to i27

ST_4: p_addr [1/1] 1.91ns
.reset:64  %p_addr = add i27 %p_shl8_cast, %p_shl9_cast

ST_4: p_addr1 [1/1] 1.91ns
.reset:65  %p_addr1 = add i27 %p_addr, %tmp_trn_cast


 <State 5>: 6.38ns
ST_5: tmp_40_cast [1/1] 0.00ns
.reset:12  %tmp_40_cast = zext i8 %Y to i9

ST_5: C [1/1] 0.00ns
.reset:13  %C = add i9 %tmp_40_cast, -16

ST_5: D [1/1] 1.37ns
.reset:14  %D = xor i8 %U, -128

ST_5: E [1/1] 1.37ns
.reset:15  %E = xor i8 %V, -128

ST_5: tmp_43_cast [1/1] 0.00ns
.reset:16  %tmp_43_cast = sext i9 %C to i18

ST_5: tmp_19 [1/1] 3.36ns
.reset:17  %tmp_19 = mul i18 %tmp_43_cast, 298

ST_5: tmp_21 [1/1] 3.02ns
.reset:21  %tmp_21 = add i18 %tmp_19, 128


 <State 6>: 6.72ns
ST_6: tmp_45_cast4 [1/1] 0.00ns
.reset:18  %tmp_45_cast4 = sext i8 %E to i18

ST_6: tmp_45_cast4_cast [1/1] 0.00ns
.reset:19  %tmp_45_cast4_cast = sext i8 %E to i17

ST_6: tmp_20 [1/1] 3.36ns
.reset:20  %tmp_20 = mul i18 %tmp_45_cast4, 409

ST_6: tmp_47_cast [1/1] 0.00ns
.reset:22  %tmp_47_cast = sext i18 %tmp_21 to i19

ST_6: tmp_22 [1/1] 3.02ns
.reset:23  %tmp_22 = add i18 %tmp_20, %tmp_21

ST_6: tmp_1 [1/1] 0.00ns
.reset:24  %tmp_1 = call i2 @_ssdm_op_PartSelect.i2.i18.i32.i32(i18 %tmp_22, i32 16, i32 17)

ST_6: tmp_2 [1/1] 0.00ns
.reset:26  %tmp_2 = call i1 @_ssdm_op_BitSelect.i1.i18.i32(i18 %tmp_22, i32 17)

ST_6: phitmp [1/1] 0.00ns
.reset:27  %phitmp = call i8 @_ssdm_op_PartSelect.i8.i18.i32.i32(i18 %tmp_22, i32 8, i32 15)

ST_6: tmp_24 [1/1] 3.36ns
.reset:34  %tmp_24 = mul i17 %tmp_45_cast4_cast, -208

ST_6: tmp_40_cast2 [1/1] 0.00ns
.reset:35  %tmp_40_cast2 = sext i17 %tmp_24 to i18

ST_6: tmp1 [1/1] 3.02ns
.reset:36  %tmp1 = add i18 %tmp_21, %tmp_40_cast2

ST_6: p_shl [1/1] 0.00ns
.reset:45  %p_shl = call i17 @_ssdm_op_BitConcatenate.i17.i8.i9(i8 %D, i9 0)

ST_6: p_shl_cast [1/1] 0.00ns
.reset:46  %p_shl_cast = sext i17 %p_shl to i18

ST_6: p_shl1 [1/1] 0.00ns
.reset:47  %p_shl1 = call i10 @_ssdm_op_BitConcatenate.i10.i8.i2(i8 %D, i2 0)

ST_6: p_shl1_cast [1/1] 0.00ns
.reset:48  %p_shl1_cast = sext i10 %p_shl1 to i18

ST_6: tmp_26 [1/1] 2.08ns
.reset:49  %tmp_26 = add i18 %p_shl_cast, %p_shl1_cast

ST_6: tmp_62_cast [1/1] 0.00ns
.reset:50  %tmp_62_cast = sext i18 %tmp_26 to i19

ST_6: tmp_27 [1/1] 3.02ns
.reset:51  %tmp_27 = add i19 %tmp_62_cast, %tmp_47_cast

ST_6: tmp_8 [1/1] 0.00ns
.reset:52  %tmp_8 = call i3 @_ssdm_op_PartSelect.i3.i19.i32.i32(i19 %tmp_27, i32 16, i32 18)

ST_6: icmp2 [1/1] 1.62ns
.reset:53  %icmp2 = icmp sgt i3 %tmp_8, 0

ST_6: tmp_11 [1/1] 0.00ns
.reset:54  %tmp_11 = call i1 @_ssdm_op_BitSelect.i1.i19.i32(i19 %tmp_27, i32 18)

ST_6: phitmp3 [1/1] 0.00ns
.reset:55  %phitmp3 = call i8 @_ssdm_op_PartSelect.i8.i19.i32.i32(i19 %tmp_27, i32 8, i32 15)


 <State 7>: 6.38ns
ST_7: icmp [1/1] 1.36ns
.reset:25  %icmp = icmp eq i2 %tmp_1, 1

ST_7: p_phitmp [1/1] 1.37ns
.reset:28  %p_phitmp = select i1 %icmp, i8 -1, i8 0

ST_7: tmp_3 [1/1] 1.37ns
.reset:29  %tmp_3 = or i1 %icmp, %tmp_2

ST_7: R [1/1] 1.37ns
.reset:30  %R = select i1 %tmp_3, i8 %p_phitmp, i8 %phitmp

ST_7: tmp_53_cast3_cast [1/1] 0.00ns
.reset:31  %tmp_53_cast3_cast = sext i8 %D to i16

ST_7: tmp_23 [1/1] 3.36ns
.reset:32  %tmp_23 = mul i16 %tmp_53_cast3_cast, -100

ST_7: tmp_39_cast [1/1] 0.00ns
.reset:33  %tmp_39_cast = sext i16 %tmp_23 to i18

ST_7: tmp_25 [1/1] 3.02ns
.reset:37  %tmp_25 = add i18 %tmp1, %tmp_39_cast

ST_7: tmp_4 [1/1] 0.00ns
.reset:38  %tmp_4 = call i2 @_ssdm_op_PartSelect.i2.i18.i32.i32(i18 %tmp_25, i32 16, i32 17)

ST_7: tmp_5 [1/1] 0.00ns
.reset:40  %tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i18.i32(i18 %tmp_25, i32 17)

ST_7: phitmp2 [1/1] 0.00ns
.reset:41  %phitmp2 = call i8 @_ssdm_op_PartSelect.i8.i18.i32.i32(i18 %tmp_25, i32 8, i32 15)

ST_7: p_phitmp3 [1/1] 1.37ns
.reset:56  %p_phitmp3 = select i1 %icmp2, i8 -1, i8 0

ST_7: tmp_9 [1/1] 1.37ns
.reset:57  %tmp_9 = or i1 %icmp2, %tmp_11

ST_7: B [1/1] 1.37ns
.reset:58  %B = select i1 %tmp_9, i8 %p_phitmp3, i8 %phitmp3


 <State 8>: 6.49ns
ST_8: stg_87 [1/1] 0.00ns
.reset:0  call void (...)* @_ssdm_op_SpecLoopName([30 x i8]* @str3)

ST_8: stg_88 [1/1] 0.00ns
.reset:1  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 40000, i64 2457600, i64 784400)

ST_8: stg_89 [1/1] 0.00ns
.reset:6  call void (...)* @_ssdm_op_SpecLoopName([15 x i8]* @p_str4) nounwind

ST_8: tmp_s [1/1] 0.00ns
.reset:7  %tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([15 x i8]* @p_str4)

ST_8: stg_91 [1/1] 0.00ns
.reset:8  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind

ST_8: icmp1 [1/1] 1.36ns
.reset:39  %icmp1 = icmp eq i2 %tmp_4, 1

ST_8: p_phitmp2 [1/1] 1.37ns
.reset:42  %p_phitmp2 = select i1 %icmp1, i8 -1, i8 0

ST_8: tmp_6 [1/1] 1.37ns
.reset:43  %tmp_6 = or i1 %icmp1, %tmp_5

ST_8: G [1/1] 1.37ns
.reset:44  %G = select i1 %tmp_6, i8 %p_phitmp2, i8 %phitmp2

ST_8: tmp_10 [1/1] 0.00ns
.reset:66  %tmp_10 = zext i27 %p_addr1 to i64

ST_8: out_channels_ch1_addr [1/1] 0.00ns
.reset:67  %out_channels_ch1_addr = getelementptr [2457600 x i8]* %out_channels_ch1, i64 0, i64 %tmp_10

ST_8: stg_98 [1/1] 2.39ns
.reset:68  store i8 %R, i8* %out_channels_ch1_addr, align 1

ST_8: out_channels_ch2_addr [1/1] 0.00ns
.reset:69  %out_channels_ch2_addr = getelementptr [2457600 x i8]* %out_channels_ch2, i64 0, i64 %tmp_10

ST_8: stg_100 [1/1] 2.39ns
.reset:70  store i8 %G, i8* %out_channels_ch2_addr, align 1

ST_8: out_channels_ch3_addr [1/1] 0.00ns
.reset:71  %out_channels_ch3_addr = getelementptr [2457600 x i8]* %out_channels_ch3, i64 0, i64 %tmp_10

ST_8: stg_102 [1/1] 2.39ns
.reset:72  store i8 %B, i8* %out_channels_ch3_addr, align 1

ST_8: empty_56 [1/1] 0.00ns
.reset:73  %empty_56 = call i32 (...)* @_ssdm_op_SpecRegionEnd([15 x i8]* @p_str4, i32 %tmp_s)

ST_8: stg_104 [1/1] 0.00ns
.reset:75  br label %1


 <State 9>: 0.00ns
ST_9: stg_105 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
