// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="yuv_filter,hls_ip_2014_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.718500,HLS_SYN_LAT=824408,HLS_SYN_TPT=784408,HLS_SYN_MEM=0,HLS_SYN_DSP=15,HLS_SYN_FF=851,HLS_SYN_LUT=1158}" *)

module yuv_filter (
        in_channels_ch1_address0,
        in_channels_ch1_ce0,
        in_channels_ch1_d0,
        in_channels_ch1_q0,
        in_channels_ch1_we0,
        in_channels_ch1_address1,
        in_channels_ch1_ce1,
        in_channels_ch1_d1,
        in_channels_ch1_q1,
        in_channels_ch1_we1,
        in_channels_ch2_address0,
        in_channels_ch2_ce0,
        in_channels_ch2_d0,
        in_channels_ch2_q0,
        in_channels_ch2_we0,
        in_channels_ch2_address1,
        in_channels_ch2_ce1,
        in_channels_ch2_d1,
        in_channels_ch2_q1,
        in_channels_ch2_we1,
        in_channels_ch3_address0,
        in_channels_ch3_ce0,
        in_channels_ch3_d0,
        in_channels_ch3_q0,
        in_channels_ch3_we0,
        in_channels_ch3_address1,
        in_channels_ch3_ce1,
        in_channels_ch3_d1,
        in_channels_ch3_q1,
        in_channels_ch3_we1,
        in_width,
        in_height,
        out_channels_ch1_address0,
        out_channels_ch1_ce0,
        out_channels_ch1_d0,
        out_channels_ch1_q0,
        out_channels_ch1_we0,
        out_channels_ch1_address1,
        out_channels_ch1_ce1,
        out_channels_ch1_d1,
        out_channels_ch1_q1,
        out_channels_ch1_we1,
        out_channels_ch2_address0,
        out_channels_ch2_ce0,
        out_channels_ch2_d0,
        out_channels_ch2_q0,
        out_channels_ch2_we0,
        out_channels_ch2_address1,
        out_channels_ch2_ce1,
        out_channels_ch2_d1,
        out_channels_ch2_q1,
        out_channels_ch2_we1,
        out_channels_ch3_address0,
        out_channels_ch3_ce0,
        out_channels_ch3_d0,
        out_channels_ch3_q0,
        out_channels_ch3_we0,
        out_channels_ch3_address1,
        out_channels_ch3_ce1,
        out_channels_ch3_d1,
        out_channels_ch3_q1,
        out_channels_ch3_we1,
        out_width,
        out_height,
        Y_scale,
        U_scale,
        V_scale,
        ap_clk,
        ap_rst,
        out_width_ap_vld,
        out_height_ap_vld,
        ap_done,
        ap_start,
        ap_idle,
        ap_ready
);

parameter    ap_const_lv22_0 = 22'b0000000000000000000000;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_true = 1'b1;

output  [21:0] in_channels_ch1_address0;
output   in_channels_ch1_ce0;
output  [7:0] in_channels_ch1_d0;
input  [7:0] in_channels_ch1_q0;
output   in_channels_ch1_we0;
output  [21:0] in_channels_ch1_address1;
output   in_channels_ch1_ce1;
output  [7:0] in_channels_ch1_d1;
input  [7:0] in_channels_ch1_q1;
output   in_channels_ch1_we1;
output  [21:0] in_channels_ch2_address0;
output   in_channels_ch2_ce0;
output  [7:0] in_channels_ch2_d0;
input  [7:0] in_channels_ch2_q0;
output   in_channels_ch2_we0;
output  [21:0] in_channels_ch2_address1;
output   in_channels_ch2_ce1;
output  [7:0] in_channels_ch2_d1;
input  [7:0] in_channels_ch2_q1;
output   in_channels_ch2_we1;
output  [21:0] in_channels_ch3_address0;
output   in_channels_ch3_ce0;
output  [7:0] in_channels_ch3_d0;
input  [7:0] in_channels_ch3_q0;
output   in_channels_ch3_we0;
output  [21:0] in_channels_ch3_address1;
output   in_channels_ch3_ce1;
output  [7:0] in_channels_ch3_d1;
input  [7:0] in_channels_ch3_q1;
output   in_channels_ch3_we1;
input  [15:0] in_width;
input  [15:0] in_height;
output  [21:0] out_channels_ch1_address0;
output   out_channels_ch1_ce0;
output  [7:0] out_channels_ch1_d0;
input  [7:0] out_channels_ch1_q0;
output   out_channels_ch1_we0;
output  [21:0] out_channels_ch1_address1;
output   out_channels_ch1_ce1;
output  [7:0] out_channels_ch1_d1;
input  [7:0] out_channels_ch1_q1;
output   out_channels_ch1_we1;
output  [21:0] out_channels_ch2_address0;
output   out_channels_ch2_ce0;
output  [7:0] out_channels_ch2_d0;
input  [7:0] out_channels_ch2_q0;
output   out_channels_ch2_we0;
output  [21:0] out_channels_ch2_address1;
output   out_channels_ch2_ce1;
output  [7:0] out_channels_ch2_d1;
input  [7:0] out_channels_ch2_q1;
output   out_channels_ch2_we1;
output  [21:0] out_channels_ch3_address0;
output   out_channels_ch3_ce0;
output  [7:0] out_channels_ch3_d0;
input  [7:0] out_channels_ch3_q0;
output   out_channels_ch3_we0;
output  [21:0] out_channels_ch3_address1;
output   out_channels_ch3_ce1;
output  [7:0] out_channels_ch3_d1;
input  [7:0] out_channels_ch3_q1;
output   out_channels_ch3_we1;
output  [15:0] out_width;
output  [15:0] out_height;
input  [7:0] Y_scale;
input  [7:0] U_scale;
input  [7:0] V_scale;
input   ap_clk;
input   ap_rst;
output   out_width_ap_vld;
output   out_height_ap_vld;
output   ap_done;
input   ap_start;
output   ap_idle;
output   ap_ready;

reg ap_idle;
wire    yuv_filter_rgb2yuv_U0_ap_start;
wire    yuv_filter_rgb2yuv_U0_ap_done;
wire    yuv_filter_rgb2yuv_U0_ap_continue;
wire    yuv_filter_rgb2yuv_U0_ap_idle;
wire    yuv_filter_rgb2yuv_U0_ap_ready;
wire   [21:0] yuv_filter_rgb2yuv_U0_in_channels_ch1_address0;
wire    yuv_filter_rgb2yuv_U0_in_channels_ch1_ce0;
wire   [7:0] yuv_filter_rgb2yuv_U0_in_channels_ch1_q0;
wire   [21:0] yuv_filter_rgb2yuv_U0_in_channels_ch2_address0;
wire    yuv_filter_rgb2yuv_U0_in_channels_ch2_ce0;
wire   [7:0] yuv_filter_rgb2yuv_U0_in_channels_ch2_q0;
wire   [21:0] yuv_filter_rgb2yuv_U0_in_channels_ch3_address0;
wire    yuv_filter_rgb2yuv_U0_in_channels_ch3_ce0;
wire   [7:0] yuv_filter_rgb2yuv_U0_in_channels_ch3_q0;
wire   [15:0] yuv_filter_rgb2yuv_U0_in_width;
wire   [15:0] yuv_filter_rgb2yuv_U0_in_height;
wire   [7:0] yuv_filter_rgb2yuv_U0_out_channels_ch1_din;
wire    yuv_filter_rgb2yuv_U0_out_channels_ch1_full_n;
wire    yuv_filter_rgb2yuv_U0_out_channels_ch1_write;
wire   [7:0] yuv_filter_rgb2yuv_U0_out_channels_ch2_din;
wire    yuv_filter_rgb2yuv_U0_out_channels_ch2_full_n;
wire    yuv_filter_rgb2yuv_U0_out_channels_ch2_write;
wire   [7:0] yuv_filter_rgb2yuv_U0_out_channels_ch3_din;
wire    yuv_filter_rgb2yuv_U0_out_channels_ch3_full_n;
wire    yuv_filter_rgb2yuv_U0_out_channels_ch3_write;
wire   [15:0] yuv_filter_rgb2yuv_U0_out_width_din;
wire    yuv_filter_rgb2yuv_U0_out_width_full_n;
wire    yuv_filter_rgb2yuv_U0_out_width_write;
wire   [15:0] yuv_filter_rgb2yuv_U0_out_height_din;
wire    yuv_filter_rgb2yuv_U0_out_height_full_n;
wire    yuv_filter_rgb2yuv_U0_out_height_write;
wire    yuv_filter_yuv_scale_U0_ap_start;
wire    yuv_filter_yuv_scale_U0_ap_done;
wire    yuv_filter_yuv_scale_U0_ap_continue;
wire    yuv_filter_yuv_scale_U0_ap_idle;
wire    yuv_filter_yuv_scale_U0_ap_ready;
wire   [7:0] yuv_filter_yuv_scale_U0_in_channels_ch1_dout;
wire    yuv_filter_yuv_scale_U0_in_channels_ch1_empty_n;
wire    yuv_filter_yuv_scale_U0_in_channels_ch1_read;
wire   [7:0] yuv_filter_yuv_scale_U0_in_channels_ch2_dout;
wire    yuv_filter_yuv_scale_U0_in_channels_ch2_empty_n;
wire    yuv_filter_yuv_scale_U0_in_channels_ch2_read;
wire   [7:0] yuv_filter_yuv_scale_U0_in_channels_ch3_dout;
wire    yuv_filter_yuv_scale_U0_in_channels_ch3_empty_n;
wire    yuv_filter_yuv_scale_U0_in_channels_ch3_read;
wire   [15:0] yuv_filter_yuv_scale_U0_in_width_dout;
wire    yuv_filter_yuv_scale_U0_in_width_empty_n;
wire    yuv_filter_yuv_scale_U0_in_width_read;
wire   [15:0] yuv_filter_yuv_scale_U0_in_height_dout;
wire    yuv_filter_yuv_scale_U0_in_height_empty_n;
wire    yuv_filter_yuv_scale_U0_in_height_read;
wire   [7:0] yuv_filter_yuv_scale_U0_out_channels_ch1_din;
wire    yuv_filter_yuv_scale_U0_out_channels_ch1_full_n;
wire    yuv_filter_yuv_scale_U0_out_channels_ch1_write;
wire   [7:0] yuv_filter_yuv_scale_U0_out_channels_ch2_din;
wire    yuv_filter_yuv_scale_U0_out_channels_ch2_full_n;
wire    yuv_filter_yuv_scale_U0_out_channels_ch2_write;
wire   [7:0] yuv_filter_yuv_scale_U0_out_channels_ch3_din;
wire    yuv_filter_yuv_scale_U0_out_channels_ch3_full_n;
wire    yuv_filter_yuv_scale_U0_out_channels_ch3_write;
wire   [15:0] yuv_filter_yuv_scale_U0_out_width_din;
wire    yuv_filter_yuv_scale_U0_out_width_full_n;
wire    yuv_filter_yuv_scale_U0_out_width_write;
wire   [15:0] yuv_filter_yuv_scale_U0_out_height_din;
wire    yuv_filter_yuv_scale_U0_out_height_full_n;
wire    yuv_filter_yuv_scale_U0_out_height_write;
wire   [7:0] yuv_filter_yuv_scale_U0_Y_scale;
wire   [7:0] yuv_filter_yuv_scale_U0_U_scale;
wire   [7:0] yuv_filter_yuv_scale_U0_V_scale;
reg    yuv_filter_yuv2rgb_U0_ap_start = 1'b0;
wire    yuv_filter_yuv2rgb_U0_ap_done;
wire    yuv_filter_yuv2rgb_U0_ap_continue;
wire    yuv_filter_yuv2rgb_U0_ap_idle;
wire    yuv_filter_yuv2rgb_U0_ap_ready;
wire   [7:0] yuv_filter_yuv2rgb_U0_in_channels_ch1_dout;
wire    yuv_filter_yuv2rgb_U0_in_channels_ch1_empty_n;
wire    yuv_filter_yuv2rgb_U0_in_channels_ch1_read;
wire   [7:0] yuv_filter_yuv2rgb_U0_in_channels_ch2_dout;
wire    yuv_filter_yuv2rgb_U0_in_channels_ch2_empty_n;
wire    yuv_filter_yuv2rgb_U0_in_channels_ch2_read;
wire   [7:0] yuv_filter_yuv2rgb_U0_in_channels_ch3_dout;
wire    yuv_filter_yuv2rgb_U0_in_channels_ch3_empty_n;
wire    yuv_filter_yuv2rgb_U0_in_channels_ch3_read;
wire   [15:0] yuv_filter_yuv2rgb_U0_in_width_dout;
wire    yuv_filter_yuv2rgb_U0_in_width_empty_n;
wire    yuv_filter_yuv2rgb_U0_in_width_read;
wire   [15:0] yuv_filter_yuv2rgb_U0_in_height_dout;
wire    yuv_filter_yuv2rgb_U0_in_height_empty_n;
wire    yuv_filter_yuv2rgb_U0_in_height_read;
wire   [21:0] yuv_filter_yuv2rgb_U0_out_channels_ch1_address0;
wire    yuv_filter_yuv2rgb_U0_out_channels_ch1_ce0;
wire    yuv_filter_yuv2rgb_U0_out_channels_ch1_we0;
wire   [7:0] yuv_filter_yuv2rgb_U0_out_channels_ch1_d0;
wire   [21:0] yuv_filter_yuv2rgb_U0_out_channels_ch2_address0;
wire    yuv_filter_yuv2rgb_U0_out_channels_ch2_ce0;
wire    yuv_filter_yuv2rgb_U0_out_channels_ch2_we0;
wire   [7:0] yuv_filter_yuv2rgb_U0_out_channels_ch2_d0;
wire   [21:0] yuv_filter_yuv2rgb_U0_out_channels_ch3_address0;
wire    yuv_filter_yuv2rgb_U0_out_channels_ch3_ce0;
wire    yuv_filter_yuv2rgb_U0_out_channels_ch3_we0;
wire   [7:0] yuv_filter_yuv2rgb_U0_out_channels_ch3_d0;
wire   [15:0] yuv_filter_yuv2rgb_U0_out_width;
wire    yuv_filter_yuv2rgb_U0_out_width_ap_vld;
wire   [15:0] yuv_filter_yuv2rgb_U0_out_height;
wire    yuv_filter_yuv2rgb_U0_out_height_ap_vld;
wire    ap_sig_hs_continue;
wire    p_yuv_channels_ch1_U_ap_dummy_ce;
wire   [7:0] p_yuv_channels_ch1_din;
wire    p_yuv_channels_ch1_full_n;
wire    p_yuv_channels_ch1_write;
wire   [7:0] p_yuv_channels_ch1_dout;
wire    p_yuv_channels_ch1_empty_n;
wire    p_yuv_channels_ch1_read;
wire    p_yuv_channels_ch2_U_ap_dummy_ce;
wire   [7:0] p_yuv_channels_ch2_din;
wire    p_yuv_channels_ch2_full_n;
wire    p_yuv_channels_ch2_write;
wire   [7:0] p_yuv_channels_ch2_dout;
wire    p_yuv_channels_ch2_empty_n;
wire    p_yuv_channels_ch2_read;
wire    p_yuv_channels_ch3_U_ap_dummy_ce;
wire   [7:0] p_yuv_channels_ch3_din;
wire    p_yuv_channels_ch3_full_n;
wire    p_yuv_channels_ch3_write;
wire   [7:0] p_yuv_channels_ch3_dout;
wire    p_yuv_channels_ch3_empty_n;
wire    p_yuv_channels_ch3_read;
wire    p_yuv_width_U_ap_dummy_ce;
wire   [15:0] p_yuv_width_din;
wire    p_yuv_width_full_n;
wire    p_yuv_width_write;
wire   [15:0] p_yuv_width_dout;
wire    p_yuv_width_empty_n;
wire    p_yuv_width_read;
wire    p_yuv_height_U_ap_dummy_ce;
wire   [15:0] p_yuv_height_din;
wire    p_yuv_height_full_n;
wire    p_yuv_height_write;
wire   [15:0] p_yuv_height_dout;
wire    p_yuv_height_empty_n;
wire    p_yuv_height_read;
wire    p_scale_channels_ch1_U_ap_dummy_ce;
wire   [7:0] p_scale_channels_ch1_din;
wire    p_scale_channels_ch1_full_n;
wire    p_scale_channels_ch1_write;
wire   [7:0] p_scale_channels_ch1_dout;
wire    p_scale_channels_ch1_empty_n;
wire    p_scale_channels_ch1_read;
wire    p_scale_channels_ch2_U_ap_dummy_ce;
wire   [7:0] p_scale_channels_ch2_din;
wire    p_scale_channels_ch2_full_n;
wire    p_scale_channels_ch2_write;
wire   [7:0] p_scale_channels_ch2_dout;
wire    p_scale_channels_ch2_empty_n;
wire    p_scale_channels_ch2_read;
wire    p_scale_channels_ch3_U_ap_dummy_ce;
wire   [7:0] p_scale_channels_ch3_din;
wire    p_scale_channels_ch3_full_n;
wire    p_scale_channels_ch3_write;
wire   [7:0] p_scale_channels_ch3_dout;
wire    p_scale_channels_ch3_empty_n;
wire    p_scale_channels_ch3_read;
wire    p_scale_width_U_ap_dummy_ce;
wire   [15:0] p_scale_width_din;
wire    p_scale_width_full_n;
wire    p_scale_width_write;
wire   [15:0] p_scale_width_dout;
wire    p_scale_width_empty_n;
wire    p_scale_width_read;
wire    p_scale_height_U_ap_dummy_ce;
wire   [15:0] p_scale_height_din;
wire    p_scale_height_full_n;
wire    p_scale_height_write;
wire   [15:0] p_scale_height_dout;
wire    p_scale_height_empty_n;
wire    p_scale_height_read;
reg    ap_reg_procdone_yuv_filter_rgb2yuv_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_yuv_filter_yuv_scale_U0 = 1'b0;
reg    ap_reg_procdone_yuv_filter_yuv2rgb_U0 = 1'b0;
reg    ap_CS;
reg    ap_sig_top_allready;
reg    ap_reg_ready_yuv_filter_rgb2yuv_U0_ap_ready = 1'b0;
reg    ap_sig_ready_yuv_filter_rgb2yuv_U0_ap_ready;
reg    ap_sig_start_in_yuv_filter_rgb2yuv_U0_ap_start;
reg    ap_reg_ready_yuv_filter_yuv_scale_U0_ap_ready = 1'b0;
reg    ap_sig_ready_yuv_filter_yuv_scale_U0_ap_ready;
reg    ap_sig_start_in_yuv_filter_yuv_scale_U0_ap_start;


yuv_filter_rgb2yuv yuv_filter_rgb2yuv_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( yuv_filter_rgb2yuv_U0_ap_start ),
    .ap_done( yuv_filter_rgb2yuv_U0_ap_done ),
    .ap_continue( yuv_filter_rgb2yuv_U0_ap_continue ),
    .ap_idle( yuv_filter_rgb2yuv_U0_ap_idle ),
    .ap_ready( yuv_filter_rgb2yuv_U0_ap_ready ),
    .in_channels_ch1_address0( yuv_filter_rgb2yuv_U0_in_channels_ch1_address0 ),
    .in_channels_ch1_ce0( yuv_filter_rgb2yuv_U0_in_channels_ch1_ce0 ),
    .in_channels_ch1_q0( yuv_filter_rgb2yuv_U0_in_channels_ch1_q0 ),
    .in_channels_ch2_address0( yuv_filter_rgb2yuv_U0_in_channels_ch2_address0 ),
    .in_channels_ch2_ce0( yuv_filter_rgb2yuv_U0_in_channels_ch2_ce0 ),
    .in_channels_ch2_q0( yuv_filter_rgb2yuv_U0_in_channels_ch2_q0 ),
    .in_channels_ch3_address0( yuv_filter_rgb2yuv_U0_in_channels_ch3_address0 ),
    .in_channels_ch3_ce0( yuv_filter_rgb2yuv_U0_in_channels_ch3_ce0 ),
    .in_channels_ch3_q0( yuv_filter_rgb2yuv_U0_in_channels_ch3_q0 ),
    .in_width( yuv_filter_rgb2yuv_U0_in_width ),
    .in_height( yuv_filter_rgb2yuv_U0_in_height ),
    .out_channels_ch1_din( yuv_filter_rgb2yuv_U0_out_channels_ch1_din ),
    .out_channels_ch1_full_n( yuv_filter_rgb2yuv_U0_out_channels_ch1_full_n ),
    .out_channels_ch1_write( yuv_filter_rgb2yuv_U0_out_channels_ch1_write ),
    .out_channels_ch2_din( yuv_filter_rgb2yuv_U0_out_channels_ch2_din ),
    .out_channels_ch2_full_n( yuv_filter_rgb2yuv_U0_out_channels_ch2_full_n ),
    .out_channels_ch2_write( yuv_filter_rgb2yuv_U0_out_channels_ch2_write ),
    .out_channels_ch3_din( yuv_filter_rgb2yuv_U0_out_channels_ch3_din ),
    .out_channels_ch3_full_n( yuv_filter_rgb2yuv_U0_out_channels_ch3_full_n ),
    .out_channels_ch3_write( yuv_filter_rgb2yuv_U0_out_channels_ch3_write ),
    .out_width_din( yuv_filter_rgb2yuv_U0_out_width_din ),
    .out_width_full_n( yuv_filter_rgb2yuv_U0_out_width_full_n ),
    .out_width_write( yuv_filter_rgb2yuv_U0_out_width_write ),
    .out_height_din( yuv_filter_rgb2yuv_U0_out_height_din ),
    .out_height_full_n( yuv_filter_rgb2yuv_U0_out_height_full_n ),
    .out_height_write( yuv_filter_rgb2yuv_U0_out_height_write )
);

yuv_filter_yuv_scale yuv_filter_yuv_scale_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( yuv_filter_yuv_scale_U0_ap_start ),
    .ap_done( yuv_filter_yuv_scale_U0_ap_done ),
    .ap_continue( yuv_filter_yuv_scale_U0_ap_continue ),
    .ap_idle( yuv_filter_yuv_scale_U0_ap_idle ),
    .ap_ready( yuv_filter_yuv_scale_U0_ap_ready ),
    .in_channels_ch1_dout( yuv_filter_yuv_scale_U0_in_channels_ch1_dout ),
    .in_channels_ch1_empty_n( yuv_filter_yuv_scale_U0_in_channels_ch1_empty_n ),
    .in_channels_ch1_read( yuv_filter_yuv_scale_U0_in_channels_ch1_read ),
    .in_channels_ch2_dout( yuv_filter_yuv_scale_U0_in_channels_ch2_dout ),
    .in_channels_ch2_empty_n( yuv_filter_yuv_scale_U0_in_channels_ch2_empty_n ),
    .in_channels_ch2_read( yuv_filter_yuv_scale_U0_in_channels_ch2_read ),
    .in_channels_ch3_dout( yuv_filter_yuv_scale_U0_in_channels_ch3_dout ),
    .in_channels_ch3_empty_n( yuv_filter_yuv_scale_U0_in_channels_ch3_empty_n ),
    .in_channels_ch3_read( yuv_filter_yuv_scale_U0_in_channels_ch3_read ),
    .in_width_dout( yuv_filter_yuv_scale_U0_in_width_dout ),
    .in_width_empty_n( yuv_filter_yuv_scale_U0_in_width_empty_n ),
    .in_width_read( yuv_filter_yuv_scale_U0_in_width_read ),
    .in_height_dout( yuv_filter_yuv_scale_U0_in_height_dout ),
    .in_height_empty_n( yuv_filter_yuv_scale_U0_in_height_empty_n ),
    .in_height_read( yuv_filter_yuv_scale_U0_in_height_read ),
    .out_channels_ch1_din( yuv_filter_yuv_scale_U0_out_channels_ch1_din ),
    .out_channels_ch1_full_n( yuv_filter_yuv_scale_U0_out_channels_ch1_full_n ),
    .out_channels_ch1_write( yuv_filter_yuv_scale_U0_out_channels_ch1_write ),
    .out_channels_ch2_din( yuv_filter_yuv_scale_U0_out_channels_ch2_din ),
    .out_channels_ch2_full_n( yuv_filter_yuv_scale_U0_out_channels_ch2_full_n ),
    .out_channels_ch2_write( yuv_filter_yuv_scale_U0_out_channels_ch2_write ),
    .out_channels_ch3_din( yuv_filter_yuv_scale_U0_out_channels_ch3_din ),
    .out_channels_ch3_full_n( yuv_filter_yuv_scale_U0_out_channels_ch3_full_n ),
    .out_channels_ch3_write( yuv_filter_yuv_scale_U0_out_channels_ch3_write ),
    .out_width_din( yuv_filter_yuv_scale_U0_out_width_din ),
    .out_width_full_n( yuv_filter_yuv_scale_U0_out_width_full_n ),
    .out_width_write( yuv_filter_yuv_scale_U0_out_width_write ),
    .out_height_din( yuv_filter_yuv_scale_U0_out_height_din ),
    .out_height_full_n( yuv_filter_yuv_scale_U0_out_height_full_n ),
    .out_height_write( yuv_filter_yuv_scale_U0_out_height_write ),
    .Y_scale( yuv_filter_yuv_scale_U0_Y_scale ),
    .U_scale( yuv_filter_yuv_scale_U0_U_scale ),
    .V_scale( yuv_filter_yuv_scale_U0_V_scale )
);

yuv_filter_yuv2rgb yuv_filter_yuv2rgb_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( yuv_filter_yuv2rgb_U0_ap_start ),
    .ap_done( yuv_filter_yuv2rgb_U0_ap_done ),
    .ap_continue( yuv_filter_yuv2rgb_U0_ap_continue ),
    .ap_idle( yuv_filter_yuv2rgb_U0_ap_idle ),
    .ap_ready( yuv_filter_yuv2rgb_U0_ap_ready ),
    .in_channels_ch1_dout( yuv_filter_yuv2rgb_U0_in_channels_ch1_dout ),
    .in_channels_ch1_empty_n( yuv_filter_yuv2rgb_U0_in_channels_ch1_empty_n ),
    .in_channels_ch1_read( yuv_filter_yuv2rgb_U0_in_channels_ch1_read ),
    .in_channels_ch2_dout( yuv_filter_yuv2rgb_U0_in_channels_ch2_dout ),
    .in_channels_ch2_empty_n( yuv_filter_yuv2rgb_U0_in_channels_ch2_empty_n ),
    .in_channels_ch2_read( yuv_filter_yuv2rgb_U0_in_channels_ch2_read ),
    .in_channels_ch3_dout( yuv_filter_yuv2rgb_U0_in_channels_ch3_dout ),
    .in_channels_ch3_empty_n( yuv_filter_yuv2rgb_U0_in_channels_ch3_empty_n ),
    .in_channels_ch3_read( yuv_filter_yuv2rgb_U0_in_channels_ch3_read ),
    .in_width_dout( yuv_filter_yuv2rgb_U0_in_width_dout ),
    .in_width_empty_n( yuv_filter_yuv2rgb_U0_in_width_empty_n ),
    .in_width_read( yuv_filter_yuv2rgb_U0_in_width_read ),
    .in_height_dout( yuv_filter_yuv2rgb_U0_in_height_dout ),
    .in_height_empty_n( yuv_filter_yuv2rgb_U0_in_height_empty_n ),
    .in_height_read( yuv_filter_yuv2rgb_U0_in_height_read ),
    .out_channels_ch1_address0( yuv_filter_yuv2rgb_U0_out_channels_ch1_address0 ),
    .out_channels_ch1_ce0( yuv_filter_yuv2rgb_U0_out_channels_ch1_ce0 ),
    .out_channels_ch1_we0( yuv_filter_yuv2rgb_U0_out_channels_ch1_we0 ),
    .out_channels_ch1_d0( yuv_filter_yuv2rgb_U0_out_channels_ch1_d0 ),
    .out_channels_ch2_address0( yuv_filter_yuv2rgb_U0_out_channels_ch2_address0 ),
    .out_channels_ch2_ce0( yuv_filter_yuv2rgb_U0_out_channels_ch2_ce0 ),
    .out_channels_ch2_we0( yuv_filter_yuv2rgb_U0_out_channels_ch2_we0 ),
    .out_channels_ch2_d0( yuv_filter_yuv2rgb_U0_out_channels_ch2_d0 ),
    .out_channels_ch3_address0( yuv_filter_yuv2rgb_U0_out_channels_ch3_address0 ),
    .out_channels_ch3_ce0( yuv_filter_yuv2rgb_U0_out_channels_ch3_ce0 ),
    .out_channels_ch3_we0( yuv_filter_yuv2rgb_U0_out_channels_ch3_we0 ),
    .out_channels_ch3_d0( yuv_filter_yuv2rgb_U0_out_channels_ch3_d0 ),
    .out_width( yuv_filter_yuv2rgb_U0_out_width ),
    .out_width_ap_vld( yuv_filter_yuv2rgb_U0_out_width_ap_vld ),
    .out_height( yuv_filter_yuv2rgb_U0_out_height ),
    .out_height_ap_vld( yuv_filter_yuv2rgb_U0_out_height_ap_vld )
);

FIFO_yuv_filter_p_yuv_channels_ch1 p_yuv_channels_ch1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( p_yuv_channels_ch1_U_ap_dummy_ce ),
    .if_write_ce( p_yuv_channels_ch1_U_ap_dummy_ce ),
    .if_din( p_yuv_channels_ch1_din ),
    .if_full_n( p_yuv_channels_ch1_full_n ),
    .if_write( p_yuv_channels_ch1_write ),
    .if_dout( p_yuv_channels_ch1_dout ),
    .if_empty_n( p_yuv_channels_ch1_empty_n ),
    .if_read( p_yuv_channels_ch1_read )
);

FIFO_yuv_filter_p_yuv_channels_ch2 p_yuv_channels_ch2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( p_yuv_channels_ch2_U_ap_dummy_ce ),
    .if_write_ce( p_yuv_channels_ch2_U_ap_dummy_ce ),
    .if_din( p_yuv_channels_ch2_din ),
    .if_full_n( p_yuv_channels_ch2_full_n ),
    .if_write( p_yuv_channels_ch2_write ),
    .if_dout( p_yuv_channels_ch2_dout ),
    .if_empty_n( p_yuv_channels_ch2_empty_n ),
    .if_read( p_yuv_channels_ch2_read )
);

FIFO_yuv_filter_p_yuv_channels_ch3 p_yuv_channels_ch3_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( p_yuv_channels_ch3_U_ap_dummy_ce ),
    .if_write_ce( p_yuv_channels_ch3_U_ap_dummy_ce ),
    .if_din( p_yuv_channels_ch3_din ),
    .if_full_n( p_yuv_channels_ch3_full_n ),
    .if_write( p_yuv_channels_ch3_write ),
    .if_dout( p_yuv_channels_ch3_dout ),
    .if_empty_n( p_yuv_channels_ch3_empty_n ),
    .if_read( p_yuv_channels_ch3_read )
);

FIFO_yuv_filter_p_yuv_width p_yuv_width_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( p_yuv_width_U_ap_dummy_ce ),
    .if_write_ce( p_yuv_width_U_ap_dummy_ce ),
    .if_din( p_yuv_width_din ),
    .if_full_n( p_yuv_width_full_n ),
    .if_write( p_yuv_width_write ),
    .if_dout( p_yuv_width_dout ),
    .if_empty_n( p_yuv_width_empty_n ),
    .if_read( p_yuv_width_read )
);

FIFO_yuv_filter_p_yuv_height p_yuv_height_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( p_yuv_height_U_ap_dummy_ce ),
    .if_write_ce( p_yuv_height_U_ap_dummy_ce ),
    .if_din( p_yuv_height_din ),
    .if_full_n( p_yuv_height_full_n ),
    .if_write( p_yuv_height_write ),
    .if_dout( p_yuv_height_dout ),
    .if_empty_n( p_yuv_height_empty_n ),
    .if_read( p_yuv_height_read )
);

FIFO_yuv_filter_p_scale_channels_ch1 p_scale_channels_ch1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( p_scale_channels_ch1_U_ap_dummy_ce ),
    .if_write_ce( p_scale_channels_ch1_U_ap_dummy_ce ),
    .if_din( p_scale_channels_ch1_din ),
    .if_full_n( p_scale_channels_ch1_full_n ),
    .if_write( p_scale_channels_ch1_write ),
    .if_dout( p_scale_channels_ch1_dout ),
    .if_empty_n( p_scale_channels_ch1_empty_n ),
    .if_read( p_scale_channels_ch1_read )
);

FIFO_yuv_filter_p_scale_channels_ch2 p_scale_channels_ch2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( p_scale_channels_ch2_U_ap_dummy_ce ),
    .if_write_ce( p_scale_channels_ch2_U_ap_dummy_ce ),
    .if_din( p_scale_channels_ch2_din ),
    .if_full_n( p_scale_channels_ch2_full_n ),
    .if_write( p_scale_channels_ch2_write ),
    .if_dout( p_scale_channels_ch2_dout ),
    .if_empty_n( p_scale_channels_ch2_empty_n ),
    .if_read( p_scale_channels_ch2_read )
);

FIFO_yuv_filter_p_scale_channels_ch3 p_scale_channels_ch3_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( p_scale_channels_ch3_U_ap_dummy_ce ),
    .if_write_ce( p_scale_channels_ch3_U_ap_dummy_ce ),
    .if_din( p_scale_channels_ch3_din ),
    .if_full_n( p_scale_channels_ch3_full_n ),
    .if_write( p_scale_channels_ch3_write ),
    .if_dout( p_scale_channels_ch3_dout ),
    .if_empty_n( p_scale_channels_ch3_empty_n ),
    .if_read( p_scale_channels_ch3_read )
);

FIFO_yuv_filter_p_scale_width p_scale_width_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( p_scale_width_U_ap_dummy_ce ),
    .if_write_ce( p_scale_width_U_ap_dummy_ce ),
    .if_din( p_scale_width_din ),
    .if_full_n( p_scale_width_full_n ),
    .if_write( p_scale_width_write ),
    .if_dout( p_scale_width_dout ),
    .if_empty_n( p_scale_width_empty_n ),
    .if_read( p_scale_width_read )
);

FIFO_yuv_filter_p_scale_height p_scale_height_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( p_scale_height_U_ap_dummy_ce ),
    .if_write_ce( p_scale_height_U_ap_dummy_ce ),
    .if_din( p_scale_height_din ),
    .if_full_n( p_scale_height_full_n ),
    .if_write( p_scale_height_write ),
    .if_dout( p_scale_height_dout ),
    .if_empty_n( p_scale_height_empty_n ),
    .if_read( p_scale_height_read )
);



/// ap_reg_procdone_yuv_filter_rgb2yuv_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_yuv_filter_rgb2yuv_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_yuv_filter_rgb2yuv_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_yuv_filter_rgb2yuv_U0 <= ap_const_logic_0;
        end else if ((yuv_filter_rgb2yuv_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_yuv_filter_rgb2yuv_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_yuv_filter_yuv2rgb_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_yuv_filter_yuv2rgb_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_yuv_filter_yuv2rgb_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_yuv_filter_yuv2rgb_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == yuv_filter_yuv2rgb_U0_ap_done)) begin
            ap_reg_procdone_yuv_filter_yuv2rgb_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_yuv_filter_yuv_scale_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_yuv_filter_yuv_scale_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_yuv_filter_yuv_scale_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_yuv_filter_yuv_scale_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == yuv_filter_yuv_scale_U0_ap_done)) begin
            ap_reg_procdone_yuv_filter_yuv_scale_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_yuv_filter_rgb2yuv_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_yuv_filter_rgb2yuv_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_yuv_filter_rgb2yuv_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_yuv_filter_rgb2yuv_U0_ap_ready <= ap_const_logic_0;
        end else if ((yuv_filter_rgb2yuv_U0_ap_ready == ap_const_logic_1)) begin
            ap_reg_ready_yuv_filter_rgb2yuv_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_yuv_filter_yuv_scale_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_yuv_filter_yuv_scale_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_yuv_filter_yuv_scale_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_yuv_filter_yuv_scale_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == yuv_filter_yuv_scale_U0_ap_ready)) begin
            ap_reg_ready_yuv_filter_yuv_scale_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// yuv_filter_yuv2rgb_U0_ap_start assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_yuv_filter_yuv2rgb_U0_ap_start
    if (ap_rst == 1'b1) begin
        yuv_filter_yuv2rgb_U0_ap_start <= ap_const_logic_0;
    end else begin
        yuv_filter_yuv2rgb_U0_ap_start <= ap_const_logic_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    ap_CS <= ap_const_logic_0;
end

/// ap_idle assign process. ///
always @ (yuv_filter_rgb2yuv_U0_ap_idle or yuv_filter_yuv_scale_U0_ap_idle or yuv_filter_yuv2rgb_U0_ap_idle)
begin
    if (((yuv_filter_rgb2yuv_U0_ap_idle == ap_const_logic_1) & (ap_const_logic_1 == yuv_filter_yuv_scale_U0_ap_idle) & (ap_const_logic_1 == yuv_filter_yuv2rgb_U0_ap_idle))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (yuv_filter_yuv2rgb_U0_ap_done)
begin
    if ((ap_const_logic_1 == yuv_filter_yuv2rgb_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

/// ap_sig_ready_yuv_filter_rgb2yuv_U0_ap_ready assign process. ///
always @ (yuv_filter_rgb2yuv_U0_ap_ready or ap_reg_ready_yuv_filter_rgb2yuv_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_yuv_filter_rgb2yuv_U0_ap_ready)) begin
        ap_sig_ready_yuv_filter_rgb2yuv_U0_ap_ready = yuv_filter_rgb2yuv_U0_ap_ready;
    end else begin
        ap_sig_ready_yuv_filter_rgb2yuv_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_yuv_filter_yuv_scale_U0_ap_ready assign process. ///
always @ (yuv_filter_yuv_scale_U0_ap_ready or ap_reg_ready_yuv_filter_yuv_scale_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_yuv_filter_yuv_scale_U0_ap_ready)) begin
        ap_sig_ready_yuv_filter_yuv_scale_U0_ap_ready = yuv_filter_yuv_scale_U0_ap_ready;
    end else begin
        ap_sig_ready_yuv_filter_yuv_scale_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_start_in_yuv_filter_rgb2yuv_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_yuv_filter_rgb2yuv_U0_ap_ready)
begin
    if (((ap_const_logic_0 == ap_reg_ready_yuv_filter_rgb2yuv_U0_ap_ready) & (ap_const_logic_1 == ap_start))) begin
        ap_sig_start_in_yuv_filter_rgb2yuv_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_yuv_filter_rgb2yuv_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_yuv_filter_yuv_scale_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_yuv_filter_yuv_scale_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_yuv_filter_yuv_scale_U0_ap_ready))) begin
        ap_sig_start_in_yuv_filter_yuv_scale_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_yuv_filter_yuv_scale_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_top_allready assign process. ///
always @ (ap_sig_ready_yuv_filter_rgb2yuv_U0_ap_ready or ap_sig_ready_yuv_filter_yuv_scale_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_sig_ready_yuv_filter_rgb2yuv_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_yuv_filter_yuv_scale_U0_ap_ready))) begin
        ap_sig_top_allready = ap_const_logic_1;
    end else begin
        ap_sig_top_allready = ap_const_logic_0;
    end
end
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;
assign ap_sig_hs_continue = ap_const_logic_1;
assign in_channels_ch1_address0 = yuv_filter_rgb2yuv_U0_in_channels_ch1_address0;
assign in_channels_ch1_address1 = ap_const_lv22_0;
assign in_channels_ch1_ce0 = yuv_filter_rgb2yuv_U0_in_channels_ch1_ce0;
assign in_channels_ch1_ce1 = ap_const_logic_0;
assign in_channels_ch1_d0 = ap_const_lv8_0;
assign in_channels_ch1_d1 = ap_const_lv8_0;
assign in_channels_ch1_we0 = ap_const_logic_0;
assign in_channels_ch1_we1 = ap_const_logic_0;
assign in_channels_ch2_address0 = yuv_filter_rgb2yuv_U0_in_channels_ch2_address0;
assign in_channels_ch2_address1 = ap_const_lv22_0;
assign in_channels_ch2_ce0 = yuv_filter_rgb2yuv_U0_in_channels_ch2_ce0;
assign in_channels_ch2_ce1 = ap_const_logic_0;
assign in_channels_ch2_d0 = ap_const_lv8_0;
assign in_channels_ch2_d1 = ap_const_lv8_0;
assign in_channels_ch2_we0 = ap_const_logic_0;
assign in_channels_ch2_we1 = ap_const_logic_0;
assign in_channels_ch3_address0 = yuv_filter_rgb2yuv_U0_in_channels_ch3_address0;
assign in_channels_ch3_address1 = ap_const_lv22_0;
assign in_channels_ch3_ce0 = yuv_filter_rgb2yuv_U0_in_channels_ch3_ce0;
assign in_channels_ch3_ce1 = ap_const_logic_0;
assign in_channels_ch3_d0 = ap_const_lv8_0;
assign in_channels_ch3_d1 = ap_const_lv8_0;
assign in_channels_ch3_we0 = ap_const_logic_0;
assign in_channels_ch3_we1 = ap_const_logic_0;
assign out_channels_ch1_address0 = yuv_filter_yuv2rgb_U0_out_channels_ch1_address0;
assign out_channels_ch1_address1 = ap_const_lv22_0;
assign out_channels_ch1_ce0 = yuv_filter_yuv2rgb_U0_out_channels_ch1_ce0;
assign out_channels_ch1_ce1 = ap_const_logic_0;
assign out_channels_ch1_d0 = yuv_filter_yuv2rgb_U0_out_channels_ch1_d0;
assign out_channels_ch1_d1 = ap_const_lv8_0;
assign out_channels_ch1_we0 = yuv_filter_yuv2rgb_U0_out_channels_ch1_we0;
assign out_channels_ch1_we1 = ap_const_logic_0;
assign out_channels_ch2_address0 = yuv_filter_yuv2rgb_U0_out_channels_ch2_address0;
assign out_channels_ch2_address1 = ap_const_lv22_0;
assign out_channels_ch2_ce0 = yuv_filter_yuv2rgb_U0_out_channels_ch2_ce0;
assign out_channels_ch2_ce1 = ap_const_logic_0;
assign out_channels_ch2_d0 = yuv_filter_yuv2rgb_U0_out_channels_ch2_d0;
assign out_channels_ch2_d1 = ap_const_lv8_0;
assign out_channels_ch2_we0 = yuv_filter_yuv2rgb_U0_out_channels_ch2_we0;
assign out_channels_ch2_we1 = ap_const_logic_0;
assign out_channels_ch3_address0 = yuv_filter_yuv2rgb_U0_out_channels_ch3_address0;
assign out_channels_ch3_address1 = ap_const_lv22_0;
assign out_channels_ch3_ce0 = yuv_filter_yuv2rgb_U0_out_channels_ch3_ce0;
assign out_channels_ch3_ce1 = ap_const_logic_0;
assign out_channels_ch3_d0 = yuv_filter_yuv2rgb_U0_out_channels_ch3_d0;
assign out_channels_ch3_d1 = ap_const_lv8_0;
assign out_channels_ch3_we0 = yuv_filter_yuv2rgb_U0_out_channels_ch3_we0;
assign out_channels_ch3_we1 = ap_const_logic_0;
assign out_height = yuv_filter_yuv2rgb_U0_out_height;
assign out_height_ap_vld = yuv_filter_yuv2rgb_U0_out_height_ap_vld;
assign out_width = yuv_filter_yuv2rgb_U0_out_width;
assign out_width_ap_vld = yuv_filter_yuv2rgb_U0_out_width_ap_vld;
assign p_scale_channels_ch1_U_ap_dummy_ce = ap_const_logic_1;
assign p_scale_channels_ch1_din = yuv_filter_yuv_scale_U0_out_channels_ch1_din;
assign p_scale_channels_ch1_read = yuv_filter_yuv2rgb_U0_in_channels_ch1_read;
assign p_scale_channels_ch1_write = yuv_filter_yuv_scale_U0_out_channels_ch1_write;
assign p_scale_channels_ch2_U_ap_dummy_ce = ap_const_logic_1;
assign p_scale_channels_ch2_din = yuv_filter_yuv_scale_U0_out_channels_ch2_din;
assign p_scale_channels_ch2_read = yuv_filter_yuv2rgb_U0_in_channels_ch2_read;
assign p_scale_channels_ch2_write = yuv_filter_yuv_scale_U0_out_channels_ch2_write;
assign p_scale_channels_ch3_U_ap_dummy_ce = ap_const_logic_1;
assign p_scale_channels_ch3_din = yuv_filter_yuv_scale_U0_out_channels_ch3_din;
assign p_scale_channels_ch3_read = yuv_filter_yuv2rgb_U0_in_channels_ch3_read;
assign p_scale_channels_ch3_write = yuv_filter_yuv_scale_U0_out_channels_ch3_write;
assign p_scale_height_U_ap_dummy_ce = ap_const_logic_1;
assign p_scale_height_din = yuv_filter_yuv_scale_U0_out_height_din;
assign p_scale_height_read = yuv_filter_yuv2rgb_U0_in_height_read;
assign p_scale_height_write = yuv_filter_yuv_scale_U0_out_height_write;
assign p_scale_width_U_ap_dummy_ce = ap_const_logic_1;
assign p_scale_width_din = yuv_filter_yuv_scale_U0_out_width_din;
assign p_scale_width_read = yuv_filter_yuv2rgb_U0_in_width_read;
assign p_scale_width_write = yuv_filter_yuv_scale_U0_out_width_write;
assign p_yuv_channels_ch1_U_ap_dummy_ce = ap_const_logic_1;
assign p_yuv_channels_ch1_din = yuv_filter_rgb2yuv_U0_out_channels_ch1_din;
assign p_yuv_channels_ch1_read = yuv_filter_yuv_scale_U0_in_channels_ch1_read;
assign p_yuv_channels_ch1_write = yuv_filter_rgb2yuv_U0_out_channels_ch1_write;
assign p_yuv_channels_ch2_U_ap_dummy_ce = ap_const_logic_1;
assign p_yuv_channels_ch2_din = yuv_filter_rgb2yuv_U0_out_channels_ch2_din;
assign p_yuv_channels_ch2_read = yuv_filter_yuv_scale_U0_in_channels_ch2_read;
assign p_yuv_channels_ch2_write = yuv_filter_rgb2yuv_U0_out_channels_ch2_write;
assign p_yuv_channels_ch3_U_ap_dummy_ce = ap_const_logic_1;
assign p_yuv_channels_ch3_din = yuv_filter_rgb2yuv_U0_out_channels_ch3_din;
assign p_yuv_channels_ch3_read = yuv_filter_yuv_scale_U0_in_channels_ch3_read;
assign p_yuv_channels_ch3_write = yuv_filter_rgb2yuv_U0_out_channels_ch3_write;
assign p_yuv_height_U_ap_dummy_ce = ap_const_logic_1;
assign p_yuv_height_din = yuv_filter_rgb2yuv_U0_out_height_din;
assign p_yuv_height_read = yuv_filter_yuv_scale_U0_in_height_read;
assign p_yuv_height_write = yuv_filter_rgb2yuv_U0_out_height_write;
assign p_yuv_width_U_ap_dummy_ce = ap_const_logic_1;
assign p_yuv_width_din = yuv_filter_rgb2yuv_U0_out_width_din;
assign p_yuv_width_read = yuv_filter_yuv_scale_U0_in_width_read;
assign p_yuv_width_write = yuv_filter_rgb2yuv_U0_out_width_write;
assign yuv_filter_rgb2yuv_U0_ap_continue = ap_const_logic_1;
assign yuv_filter_rgb2yuv_U0_ap_start = ap_sig_start_in_yuv_filter_rgb2yuv_U0_ap_start;
assign yuv_filter_rgb2yuv_U0_in_channels_ch1_q0 = in_channels_ch1_q0;
assign yuv_filter_rgb2yuv_U0_in_channels_ch2_q0 = in_channels_ch2_q0;
assign yuv_filter_rgb2yuv_U0_in_channels_ch3_q0 = in_channels_ch3_q0;
assign yuv_filter_rgb2yuv_U0_in_height = in_height;
assign yuv_filter_rgb2yuv_U0_in_width = in_width;
assign yuv_filter_rgb2yuv_U0_out_channels_ch1_full_n = p_yuv_channels_ch1_full_n;
assign yuv_filter_rgb2yuv_U0_out_channels_ch2_full_n = p_yuv_channels_ch2_full_n;
assign yuv_filter_rgb2yuv_U0_out_channels_ch3_full_n = p_yuv_channels_ch3_full_n;
assign yuv_filter_rgb2yuv_U0_out_height_full_n = p_yuv_height_full_n;
assign yuv_filter_rgb2yuv_U0_out_width_full_n = p_yuv_width_full_n;
assign yuv_filter_yuv2rgb_U0_ap_continue = ap_sig_hs_continue;
assign yuv_filter_yuv2rgb_U0_in_channels_ch1_dout = p_scale_channels_ch1_dout;
assign yuv_filter_yuv2rgb_U0_in_channels_ch1_empty_n = p_scale_channels_ch1_empty_n;
assign yuv_filter_yuv2rgb_U0_in_channels_ch2_dout = p_scale_channels_ch2_dout;
assign yuv_filter_yuv2rgb_U0_in_channels_ch2_empty_n = p_scale_channels_ch2_empty_n;
assign yuv_filter_yuv2rgb_U0_in_channels_ch3_dout = p_scale_channels_ch3_dout;
assign yuv_filter_yuv2rgb_U0_in_channels_ch3_empty_n = p_scale_channels_ch3_empty_n;
assign yuv_filter_yuv2rgb_U0_in_height_dout = p_scale_height_dout;
assign yuv_filter_yuv2rgb_U0_in_height_empty_n = p_scale_height_empty_n;
assign yuv_filter_yuv2rgb_U0_in_width_dout = p_scale_width_dout;
assign yuv_filter_yuv2rgb_U0_in_width_empty_n = p_scale_width_empty_n;
assign yuv_filter_yuv_scale_U0_U_scale = U_scale;
assign yuv_filter_yuv_scale_U0_V_scale = V_scale;
assign yuv_filter_yuv_scale_U0_Y_scale = Y_scale;
assign yuv_filter_yuv_scale_U0_ap_continue = ap_const_logic_1;
assign yuv_filter_yuv_scale_U0_ap_start = ap_sig_start_in_yuv_filter_yuv_scale_U0_ap_start;
assign yuv_filter_yuv_scale_U0_in_channels_ch1_dout = p_yuv_channels_ch1_dout;
assign yuv_filter_yuv_scale_U0_in_channels_ch1_empty_n = p_yuv_channels_ch1_empty_n;
assign yuv_filter_yuv_scale_U0_in_channels_ch2_dout = p_yuv_channels_ch2_dout;
assign yuv_filter_yuv_scale_U0_in_channels_ch2_empty_n = p_yuv_channels_ch2_empty_n;
assign yuv_filter_yuv_scale_U0_in_channels_ch3_dout = p_yuv_channels_ch3_dout;
assign yuv_filter_yuv_scale_U0_in_channels_ch3_empty_n = p_yuv_channels_ch3_empty_n;
assign yuv_filter_yuv_scale_U0_in_height_dout = p_yuv_height_dout;
assign yuv_filter_yuv_scale_U0_in_height_empty_n = p_yuv_height_empty_n;
assign yuv_filter_yuv_scale_U0_in_width_dout = p_yuv_width_dout;
assign yuv_filter_yuv_scale_U0_in_width_empty_n = p_yuv_width_empty_n;
assign yuv_filter_yuv_scale_U0_out_channels_ch1_full_n = p_scale_channels_ch1_full_n;
assign yuv_filter_yuv_scale_U0_out_channels_ch2_full_n = p_scale_channels_ch2_full_n;
assign yuv_filter_yuv_scale_U0_out_channels_ch3_full_n = p_scale_channels_ch3_full_n;
assign yuv_filter_yuv_scale_U0_out_height_full_n = p_scale_height_full_n;
assign yuv_filter_yuv_scale_U0_out_width_full_n = p_scale_width_full_n;


endmodule //yuv_filter

